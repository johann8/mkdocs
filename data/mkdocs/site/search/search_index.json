{"config":{"lang":["de"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"IT Dokumentation von <code>Wassermann Gruppe</code>","text":""},{"location":"about/","title":"\u00dcber <code>Wassermann Gruppe</code>","text":"Chinese (Simplified)Chinese (Traditional)JapaneseKorean <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        font_family: Noto Sans SC\n</code></pre> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        font_family: Noto Sans TC\n</code></pre> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        font_family: Noto Sans JP\n</code></pre> <pre><code>plugins:\n  - social:\n      cards_layout_options:\n        font_family: Noto Sans KR\n</code></pre> <p>Layouts are written in YAML syntax. Before starting to create a custom layout, it is a good idea to [study the pre-designed layouts] (link to [Insiders] repository), in order to get a better understanding of how they work. Then, create a new layout and reference it in <code>mkdocs.yml</code>:</p> <code>custom.yml</code> <code>mkdocs.yml</code> <pre><code>size: { width: 1200, height: 630 }\nlayers: []\n</code></pre> <pre><code>plugins:\n  - social:\n      cards_layout_dir: layouts\n      cards_layout: custom\n      debug: true\n</code></pre>"},{"location":"about/#tip","title":"tip","text":"<p>Automatically bundle Google Fonts</p> <p>The built-in privacy plugin makes it easy to use Google Fonts while complying with the General Data Protection Regulation (GDPR), by automatically downloading and self-hosting the web font files.</p> <p>Docker improves the user experience when switching between languages, e.g., if language <code>en</code> and <code>de</code> contain a page with the same path name, the user will stay on the current page:</p> <p>No configuration is necessary. We're working hard on improving multi-language support in 2024, including making switching between languages even more seamless in the future.</p> <p>This property must contain an ISO 639-1 language code and is used for the <code>hreflang</code> attribute of the link, improving discoverability via search engines.</p> <p></p>"},{"location":"about/#info","title":"info","text":"<p>Info</p> <p>Values in bold are the default values. If an option doesn't work as documented here, check if you are running the latest image. The current <code>master</code> branch corresponds to the image <code>ghcr.io/docker-mailserver/docker-mailserver:edge</code>.</p>"},{"location":"about/#quote","title":"quote","text":"<p>What is Fail2Ban (F2B)?</p> <p>Fail2ban is an intrusion prevention software framework. Written in the Python programming language, it is designed to prevent against brute-force attacks. It is able to run on POSIX systems that have an interface to a packet-control system or firewall installed locally, such as [NFTables] or TCP Wrapper.</p> <p>Source</p>"},{"location":"about/#warning","title":"warning","text":"<p>Warning</p> <p>DMS must be launched with the <code>NET_ADMIN</code> capability in order to be able to install the NFTables rules that actually ban IP addresses. Thus, either include <code>--cap-add=NET_ADMIN</code> in the <code>docker run</code> command, or the equivalent in the <code>compose.yaml</code>:</p> <pre><code>cap_add:\n  - NET_ADMIN\n</code></pre>"},{"location":"about/#bug","title":"bug","text":"<p>Running Fail2Ban on Older Kernels</p> <p>DMS configures F2B to use NFTables, not IPTables (legacy). We have observed that older systems, for example NAS systems, do not support the modern NFTables rules. You will need to configure F2B to use legacy IPTables again, for example with the [<code>fail2ban-jail.cf</code>][github-file-f2bjail], see the section on configuration further down below.</p>"},{"location":"about/#question","title":"question","text":"<p>What is [<code>docker-data/dms/config/</code>][docs::dms-volumes-config]?</p>"},{"location":"about/#note","title":"note","text":"<p>About The Mail Server's Fully Qualified Domain Name</p> <p>The mail server's fully qualified domain name (FQDN) in our example above is <code>mail.example.com</code>. Please note though that this is more of a convention, and not due to technical restrictions. One could also run the mail server</p> <ol> <li>on <code>foo.example.com</code>: you would just need to change your <code>MX</code> record;</li> <li>on <code>example.com</code> directly: you would need to change your <code>MX</code> record and probably read our docs on bare domain setups, as these setups are called \"bare domain\" setups.</li> </ol> <p>The FQDN is what is relevant for TLS certificates, it has no (inherent/technical) relation to the email addresses and accounts DMS manages. That is to say: even though DMS runs on <code>mail.example.com</code>, or <code>foo.example.com</code>, or <code>example.com</code>, there is nothing that prevents it from managing mail for <code>barbaz.org</code> - <code>barbaz.org</code> will just need to set its <code>MX</code> record to <code>mail.example.com</code> (or <code>foo.example.com</code> or <code>example.com</code>).</p> <p>Mailserver - dockerized \ud83d\udc0b</p>"},{"location":"about/#font-awesome","title":"Font awesome","text":"<ul> <li> <p> mailcow/mailcow-dockerized @ GitHub</p> </li> <li> <p> mailcow.email</p> </li> </ul>"},{"location":"about/#question_1","title":"question","text":"<p>Question</p> <p>Mailcow, MailCow or mailcow? What is the exact name of the project?</p> <p>Correct: mailcow, because mailcow is a registered word mark with a small m </p> <p>mailcow: dockerized is an open source groupware/email suite based on docker.</p>"},{"location":"about/#abstract","title":"abstract","text":"<p>Use these credentials for the demos</p> <ul> <li>Administrator: admin / moohoo</li> <li>Domain-Administrator: department / moohoo</li> <li>Mailbox: demo@440044.xyz / moohoo</li> </ul> <p>The login credentials work for both variants.</p>"},{"location":"about/#success","title":"success","text":"<p>Always up to date</p> <p>The demo instances get the latest updates directly after releases from GitHub. Fully automatic, without any downtime!</p> <p>Each container represents a single application, connected in a bridged network:</p> <ul> <li> ACME Automatic generation of Let's Encrypt certificates</li> <li> ClamAV Antivirus scanner (optional)</li> <li> Dovecot IMAP/POP server for retrieving e-mails with integrated Full-Text Search Engine \"Flatcurve\"</li> <li> MariaDB Database for storing user information etc.</li> <li> Memcached Cache for the webmailer SOGo</li> <li> Netfilter Fail2ban-like integration of @mkuron</li> <li> Nginx Web server for components of the stack</li> <li> Olefy Analysis of Office documents for viruses, macros, etc.</li> <li> PHP Programming language of most web-based mailcow applications</li> <li> Postfix MTA (Mail Transfer Agent) for e-mail traffic on the Internet</li> <li> Redis Storage for spam information, DKIM key, etc.</li> <li> Rspamd Spam filter with automatic learning of spam mails</li> <li> SOGo Integrated webmailer and Cal-/Carddav interface</li> <li> Solr Full text search for IMAP connections to quickly search emails (Deprecated) (Optional)</li> <li> Unbound Integrated DNS server for verifying DNSSEC etc.</li> <li> Watchdog For basic monitoring of the container status within mailcow</li> </ul>"},{"location":"about/#aufklappbar","title":"Aufklappbar","text":"How to add plugins to the Docker image? <p>Material for MkDocs only bundles selected plugins in order to keep the size of the official image small. If the plugin you want to use is not included, you can add them easily:</p> Material for MkDocsInsiders <p>Create a <code>Dockerfile</code> and extend the official image:</p> Dockerfile<pre><code>FROM squidfunk/mkdocs-material\nRUN pip install mkdocs-macros-plugin\nRUN pip install mkdocs-glightbox\n</code></pre> <p>Clone or fork the Insiders repository, and create a file called <code>user-requirements.txt</code> in the root of the repository. Then, add the plugins that should be installed to the file, e.g.:</p> user-requirements.txt<pre><code>mkdocs-macros-plugin\nmkdocs-glightbox\n</code></pre> <p>Next, build the image with the following command:</p> <pre><code>docker build -t squidfunk/mkdocs-material .\n</code></pre> <p>The new image will have additional packages installed and can be used exactly like the official image.</p>"},{"location":"about/#example-authentik-roundcube","title":"Example (Authentik &amp; Roundcube)","text":"<p>This example assumes you have:</p> <ul> <li>A working DMS server set up</li> <li>An Authentik server set up (documentation)</li> <li>A Roundcube server set up (either docker or bare metal)</li> </ul> <p>Setup Instructions</p> 1. Docker Mailserver2. Authentik <p>Edit the following values in <code>mailserver.env</code>: <pre><code># -----------------------------------------------\n# --- OAUTH2 Section ----------------------------\n# -----------------------------------------------\n\n# empty =&gt; OAUTH2 authentication is disabled\n# 1 =&gt; OAUTH2 authentication is enabled\nENABLE_OAUTH2=1\n\n# Specify the user info endpoint URL of the oauth2 provider\nOAUTH2_INTROSPECTION_URL=https://authentik.example.com/application/o/userinfo/\n</code></pre></p> <ol> <li>Create a new OAuth2 provider</li> <li>Note the client id and client secret</li> <li>Set the allowed redirect url to the equivalent of <code>https://roundcube.example.com/index.php/login/oauth</code> for your RoundCube instance.</li> </ol> <code>Hier ist ein Test</code> <p></p> <p> Docker container</p> <p>Your mileage may vary depending on your hardware.</p>"},{"location":"about/#developers","title":"Developers","text":"<p>{{ external_markdown('https://raw.githubusercontent.com/jordanhillis/pvekclean/master/README.md', '## Developers') }}</p> <p>The original pvekclean github page</p>"},{"location":"about/#updating","title":"Updating","text":"<p>{{ external_markdown('https://raw.githubusercontent.com/jordanhillis/pvekclean/master/README.md', '## Updating') }}</p>"},{"location":"about/#usage","title":"Usage","text":"<p>{{ external_markdown('https://raw.githubusercontent.com/jordanhillis/pvekclean/master/README.md', '## Usage') }}</p> <p> Tip: Remember to appreciate the little things in life.</p> <p> Tip: Automatically bundle Google Fonts</p> <p> Note: Automatically bundle Google Fonts</p> <p> Note: Automatically bundle Google Fonts</p> <p> Note: Automatically bundle Google Fonts</p> <p> Note: Automatically bundle Google Fonts</p> <p> Note: Automatically bundle Google Fonts</p> <p> Note: Automatically bundle Google Fonts</p>"},{"location":"about/#test1","title":"Test1","text":"<p> Warning: Do not push the big red button.</p>"},{"location":"about/#test2","title":"Test2","text":"<p> Note: Sunrises are beautiful.</p>"},{"location":"about/#test3","title":"Test3","text":"<p> Tip: Remember to appreciate the little things in life.</p> <p>Make this text blue.</p> <p>Enoj</p> <ol> <li> <p>Servercow is a hosting/support division of The Infrastructure Company GmbH (mailcow maintainer).\u00a0\u21a9</p> </li> </ol>"},{"location":"linux/change-partition-layout_lvm/","title":"\u00c4nderung des Partitionslayouts","text":"","tags":["partition","layout","lvm","parted"]},{"location":"linux/change-partition-layout_lvm/#einfuhrung","title":"Einf\u00fchrung","text":"<p>Der Mail Server wird bei <code>Contabo</code><sup>1</sup> gehostet. Die Standardinstallation erstellt sehr einfaches Partitionlayout und zwar:</p> <p><pre><code>lsblk /dev/sda\n---\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda      8:0    0  800G  0 disk\n\u251c\u2500sda1   8:1    0 1000M  0 part /boot\n\u2514\u2500sda2   8:2    0  799G  0 part /\n---\n</code></pre> Das Vorhaben ist das Partitionslayout so zu \u00e4ndern, damit man mehr Flexibilit\u00e4t erreichen kann. Einzelne Schritte sind: </p> <ol> <li> <p>Die ISO <code>GParted_Live</code><sup>2</sup> auf den Mail Server laden und <code>GRUB</code><sup>3</sup> Konfiguration anpassen</p> </li> <li> <p>Den Server \u00fcber <code>VNC</code> von <code>GParted_Live</code> starten</p> </li> <li> <p>Die Partition <code>sda2</code> auf 100GB zu verkleinern</p> </li> <li> <p><code>LVM</code> (Logical Volume Manager) Partition anlegen</p> </li> <li> <p>Zwei <code>Logical Volumes</code> (LV) erstellen und an <code>/mnt/newopt</code> und <code>/mnt/newvar</code> anbinden</p> </li> <li> <p>Den Server in <code>Runlevel</code> <code>init 1</code> starten</p> </li> <li> <p>Die Daten von <code>/opt</code> and <code>/var</code> auf <code>/mnt/newopt</code> und <code>/mnt/newvar</code> verschieben</p> </li> <li> <p>Die <code>fstab</code> anpassen</p> </li> <li> <p>Server neu starten und testen</p> </li> </ol> \u00c4nderung des Partitionslayouts unter Linux. <ol> <li> <p>Contabo \u21a9</p> </li> <li> <p>GParted Live - Grub \u21a9</p> </li> <li> <p>Wikipedia - Grub \u21a9</p> </li> </ol>","tags":["partition","layout","lvm","parted"]},{"location":"linux/change-partition-layout_lvm/#gparted-live-on-hard-disk-using-grub","title":"<code>GParted Live</code> on Hard Disk using <code>GRUB</code>","text":"<p><pre><code>mkdir -p /boot/iso\ncd /boot/iso\n\n# Download last `Gparted Live` ISO file\nwget https://ftp.upjs.sk/pub/mirrors/gparted/gparted-live-stable/1.6.0-3/gparted-live-1.6.0-3-amd64.iso\n\n# Add to file `/etc/grub.d/40_custom`\nvim /etc/grub.d/40_custom\n---\n...\nmenuentry \"Gparted Live\" {\n  set isofile=\"/iso/gparted-live-1.6.0-3-amd64.iso\"\n  loopback loop $isofile\n  linux (loop)/live/vmlinuz boot=live config union=overlay username=user components noswap noeject vga=788 ip= net.ifnames=0 toram=filesystem.squashfs findiso=$isofile\n  initrd (loop)/live/initrd.img\n}\n---\n\n# Update `GRUB` config\ngrub2-mkconfig -o /boot/grub2/grub.cfg\n\n# UEFI-based Centos/RHEL server\ngrub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg\n\n# Reboot Server \u00fcber VNC-Console\nreboot\n</code></pre> \u00dcber VNC Console starten von <code>Gparted Live</code> und die Partition <code>sda2</code> auf 100GB reduzieren.</p>","tags":["partition","layout","lvm","parted"]},{"location":"linux/change-partition-layout_lvm/#lvm-partition-und-lvs-erstellen","title":"LVM Partition und LV's erstellen","text":"<pre><code># Aktuelle Konfiguration anzeigen lassen\nparted -a optimal /dev/sda print\n---\nModel: QEMU QEMU HARDDISK (scsi)\nDisk /dev/sda: 859GB\nSector size (logical/physical): 512B/512B\nPartition Table: msdos\nDisk Flags:\n\nNumber  Start   End     Size    Type     File system  Flags\n 1      1049kB  1050MB  1049MB  primary  ext4         boot\n 2      1050MB  111GB   110GB   primary  ext4\n---\n\n# LVM Partition erstellen\nparted -a optimal /dev/sda\n\n(parted) print free\n---\nModel: QEMU QEMU HARDDISK (scsi)\nDisk /dev/sda: 859GB\nSector size (logical/physical): 512B/512B\nPartition Table: msdos\nDisk Flags:\n\nNumber  Start   End     Size    Type     File system  Flags\n        32.3kB  1049kB  1016kB           Free Space\n 1      1049kB  1050MB  1049MB  primary  ext4         boot\n 2      1050MB  111GB   110GB   primary  ext4\n        111GB   859GB   748GB            Free Space\n---\n\n(parted) mkpart\nPartition type?  primary/extended? primary\nFile system type?  [ext2]? ext4\nStart? 111GB\nEnd? 859GB\n\n(parted) print free\nModel: QEMU QEMU HARDDISK (scsi)\nDisk /dev/sda: 859GB\nSector size (logical/physical): 512B/512B\nPartition Table: msdos\nDisk Flags:\n\nNumber  Start   End     Size    Type     File system  Flags\n        32.3kB  1049kB  1016kB           Free Space\n 1      1049kB  1050MB  1049MB  primary  ext4         boot\n 2      1050MB  111GB   110GB   primary  ext4\n 3      111GB   859GB   748GB   primary  ext4         lba\n\n(parted) set\nPartition number? 3\nFlag to Invert? lvm\nNew state?  [on]/off? on\n\n(parted) set\nPartition number? 3\nFlag to Invert? lba\nNew state?  on/[off]? off\n\n(parted) print\nModel: QEMU QEMU HARDDISK (scsi)\nDisk /dev/sda: 859GB\nSector size (logical/physical): 512B/512B\nPartition Table: msdos\nDisk Flags:\n\nNumber  Start   End     Size    Type     File system  Flags\n 1      1049kB  1050MB  1049MB  primary  ext4         boot\n 2      1050MB  111GB   110GB   primary  ext4\n 3      111GB   859GB   748GB   primary  ext4         lvm\n\n (parted) quit\n\n# Layout anzeigen lassen\nlsblk\n---\nNAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT\nsda      8:0    0   800G  0 disk\n\u251c\u2500sda1   8:1    0  1000M  0 part /boot\n\u251c\u2500sda2   8:2    0 102.6G  0 part /\n\u2514\u2500sda3   8:3    0 696.5G  0 part\n---\n\n# PV (Physical Volume) erstellen\npvcreate -v  /dev/sda3\npvs\npvdisplay\n---\n\"/dev/sda3\" is a new physical volume of \"696.48 GiB\"\n--- NEW Physical volume ---\nPV Name               /dev/sda3\nVG Name\nPV Size               696.48 GiB\nAllocatable           NO\nPE Size               0\nTotal PE              0\nFree PE               0\nAllocated PE          0\nPV UUID               wccyM3-qvNK-e0cq-bvdJ-S55p-DQOS-eooHVB\n---\n\n# VG (Volume Group) erstellen\nvgcreate rl_mx01 /dev/sda3\nvgs\nvgdisplay\n--- Volume group ---\nVG Name               rl_mx01\nSystem ID\nFormat                lvm2\nMetadata Areas        1\nMetadata Sequence No  1\nVG Access             read/write\nVG Status             resizable\nMAX LV                0\nCur LV                0\nOpen LV               0\nMax PV                0\nCur PV                1\nAct PV                1\nVG Size               696.48 GiB\nPE Size               4.00 MiB\nTotal PE              178299\nAlloc PE / Size       0 / 0\nFree  PE / Size       178299 / 696.48 GiB\nVG UUID               h8tZeA-8kD0-xc4h-F052-mlQ3-EueX-05s3HV\n---\n\n# LV (Logical Volume) erstellen\n# Create LV swap \nlvcreate -n swap -L 4GB rl_mx01\n\n# Create LV opt\nlvcreate -n opt -L 10GB rl_mx01\n\n# Create LV var\nlvcreate -n var -L 200GB rl_mx01\n\n# LV Layout anzeigen lassen\nlvs\nlvdisplay\n--- Logical volume ---\nLV Path                /dev/rl_mx01/swap\nLV Name                swap\nVG Name                rl_mx01\nLV UUID                XJj30y-JUNd-p6f9-H6T3-ErSB-Rd9R-xvTlAu\nLV Write Access        read/write\nLV Creation host, time mx01.myfirma.de, 2024-08-05 12:11:58 +0200\nLV Status              available\n# open                 0\nLV Size                4.00 GiB\nCurrent LE             1024\nSegments               1\nAllocation             inherit\nRead ahead sectors     auto\n- currently set to     8192\nBlock device           253:0\n\n--- Logical volume ---\nLV Path                /dev/rl_mx01/opt\nLV Name                opt\nVG Name                rl_mx01\nLV UUID                ziEhqh-wGrE-rwmf-uKtT-kfyd-QBtu-tJIsFr\nLV Write Access        read/write\nLV Creation host, time mx01.myfirma.de, 2024-08-05 12:13:45 +0200\nLV Status              available\n# open                 0\nLV Size                10.00 GiB\nCurrent LE             2560\nSegments               1\nAllocation             inherit\nRead ahead sectors     auto\n- currently set to     8192\nBlock device           253:1\n\n--- Logical volume ---\nLV Path                /dev/rl_mx01/var\nLV Name                var\nVG Name                rl_mx01\nLV UUID                uxXGwO-Mq47-AHTI-oqao-qfM0-S61u-Tkptom\nLV Write Access        read/write\nLV Creation host, time mx01.myfirma.de, 2024-08-05 12:13:59 +0200\nLV Status              available\n# open                 0\nLV Size                200.00 GiB\nCurrent LE             51200\nSegments               1\nAllocation             inherit\nRead ahead sectors     auto\n- currently set to     8192\nBlock device           253:2\n---\n\n#\nlsblk\n---\nNAME             MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT\nsda                8:0    0   800G  0 disk\n\u251c\u2500sda1             8:1    0  1000M  0 part /boot\n\u251c\u2500sda2             8:2    0 102.6G  0 part /\n\u2514\u2500sda3             8:3    0 696.5G  0 part\n  \u251c\u2500rl_mx01-swap 253:0    0     4G  0 lvm  [SWAP]\n  \u251c\u2500rl_mx01-opt  253:1    0    10G  0 lvm  /mnt/newopt\n  \u2514\u2500rl_mx01-var  253:2    0   200G  0 lvm  /mnt/newvar\n---\n\n# FS erstellen\nmkfs.ext4 /dev/rl_mx01/opt\nmkfs.ext4 /dev/rl_mx01/var\n</code></pre>","tags":["partition","layout","lvm","parted"]},{"location":"linux/change-partition-layout_lvm/#swap-erstellen-und-anbinden","title":"<code>SWAP</code> erstellen und anbinden","text":"<pre><code># Zeigt an, ob eine Swap-Partition oder ein Swap-File existiert\nfree -h\n\n# Ort der Swap-Datei herausfinden \nswapon -show\n\n# Swap abschalten\nswapoff -a\n\n# LV Volume zum Swap deklarieren\nmkswap /dev/rl_mx01/swap\n\n# Swap einschalten\nswapon /dev/rl_mx01/swap\n\n# Das Ergebnis anzeigen lassen\nfree -h\nswapon -show\n</code></pre>","tags":["partition","layout","lvm","parted"]},{"location":"linux/change-partition-layout_lvm/#mount-partition-and-specify-mount-point-as-mntnewvar-and-mntnewopt","title":"Mount Partition and specify Mount Point as <code>/mnt/newvar</code> and <code>/mnt/newopt</code>","text":"<pre><code># Ordner erstellen\nmkdir -p /mnt/newvar\nmkdir -p /mnt/newopt\n\n# fstab anpassen\nvim /etc/fstab\n---\n...\n/dev/mapper/rl_mx01-swap  none                           swap     defaults        0 0\n/dev/mapper/rl_mx01-var   /mnt/newvar                    ext4     defaults        1 0\n/dev/mapper/rl_mx01-opt   /mnt/newopt                    ext4     defaults        1 0\n---\n</code></pre>","tags":["partition","layout","lvm","parted"]},{"location":"linux/change-partition-layout_lvm/#uber-vnc-reboot-server-in-runlevel-1","title":"\u00dcber VNC reboot Server in runlevel 1","text":"<pre><code>init 1\n</code></pre>","tags":["partition","layout","lvm","parted"]},{"location":"linux/change-partition-layout_lvm/#copy-the-data-in-var-only-to-the-new-mounted-filesystem","title":"Copy the data in var only to the new mounted filesystem","text":"<pre><code>rsync -aHhP /opt/ /mnt/newopt/\nrsync -aHhP /var/ /mnt/newvar/\n</code></pre>","tags":["partition","layout","lvm","parted"]},{"location":"linux/change-partition-layout_lvm/#rename-the-current-var-and-opt-directory-for-backup-purposes","title":"Rename the current <code>/var</code> and <code>/opt</code> directory for backup purposes:","text":"<pre><code>mv /opt /opt.old\nmv /var /var.old\n</code></pre>","tags":["partition","layout","lvm","parted"]},{"location":"linux/change-partition-layout_lvm/#make-the-new-var-and-opt-directory","title":"Make the new <code>var</code> and <code>opt</code> directory","text":"<pre><code>mkdir /opt\nmkdir /var\n</code></pre>","tags":["partition","layout","lvm","parted"]},{"location":"linux/change-partition-layout_lvm/#edit-the-etcfstab-file","title":"Edit the <code>/etc/fstab</code> file","text":"<pre><code>vim /etc/fstab\n---\n...\n/dev/mapper/rl_mx01-swap  none                    swap     defaults        0 0\n/dev/mapper/rl_mx01-var   /var                    ext4     defaults        1 0\n/dev/mapper/rl_mx01-opt   /opt                    ext4     defaults        1 0\n---\n</code></pre> <p> Note: The new partitions are now configured to be mounted at <code>/var</code> and <code>/opt</code> on boot.</p>","tags":["partition","layout","lvm","parted"]},{"location":"linux/change-partition-layout_lvm/#restart-the-server","title":"Restart the server:","text":"<pre><code>reboot\n</code></pre>","tags":["partition","layout","lvm","parted"]},{"location":"linux/tipps-und-tricks/","title":"Linux Tipps und Tricks","text":"","tags":["linux","tipps","tricks"]},{"location":"linux/tipps-und-tricks/#rocky-oracle-change-nic-name","title":"Rocky | Oracle - change NIC name","text":"Rocky | Oracle - change NIC name <pre><code># show all network interfaces\nip a sh\n---\n...\n2: ens18: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000\n...\n---\n\n# show details of interface ens18\nnmcli device show ens18\n---\n...\nGENERAL.DEVICE:                         ens18\nGENERAL.TYPE:                           ethernet\nGENERAL.HWADDR:                         5A:43:10:3E:F4:D6\n...\n---\n\n# create folder and file 70-custom.link\nmkdir /etc/systemd/network\nvim /etc/systemd/network/70-custom.link\n---\n[Match]\nMACAddress=5A:43:10:3E:F4:D6\n\n[Link]\nName=eth0\n---\n\n#\ninit 6\n</code></pre>","tags":["linux","tipps","tricks"]},{"location":"linux/tipps-und-tricks/#dns-abfragen-mit-nslookup","title":"DNS-Abfragen mit <code>nslookup</code>","text":"DNS-Abfragen mit <code>nslookup</code> <p><code>nslookup</code> is a command-line tool for inspecting the Domain Name System (DNS).</p> <pre><code># NS Record\nnslookup -type=ns chip.de\n\n# MX Record\nnslookup -type=mx chip.de\n\n# A Record\nnslookup -type=a chip.de\n\n# AAAA Record\nnslookup -type=aaaa chip.de\n\n# CNAME Record\nnslookup -type=cname chip.de\n\n# PTR Record\nnslookup -debug 142.250.181.227\nnslookup -debug 2a02:26f0:7100::213:c6f0\n</code></pre>","tags":["linux","tipps","tricks"]},{"location":"linux/tipps-und-tricks/#dns-abfragen-mit-dig","title":"DNS-Abfragen mit <code>dig</code>","text":"DNS-Abfragen mit <code>dig</code> <p><code>dig</code> ( Domain Information Groper) is a command-line tool for inspecting the Domain Name System (DNS).</p> <pre><code># SOA Record\ndig rohrkabel.eu SOA\n\ndig rohrkabel.eu +nssearch\n\n# NS Record\ndig rohrkabel.eu NS\ndig +short rohrkabel.eu NS\n\n# MX Record\ndig rohrkabel.eu MX\ndig +short rohrkabel.eu MX\n\n# A Record IPv4\ndig rohrkabel.eu A\ndig +short rohrkabel.eu A\n\n# AAAA Record IPv6\ndig rohrkabel.eu AAAA\ndig +short rohrkabel.eu AAAA\n\n# ANY - to query any records\ndig rohrkabel.eu ANY\n\n# SRV Record\ndig _autodiscover._tcp.rohrkabel.eu SRV\ndig _imaps._tcp.rohrkabel.eu SRV\ndig _smtps._tcp.rohrkabel.eu SRV\ndig _submission._tcp.rohrkabel.eu SRV\n\n# TXT Record\ndig rohrkabel.eu TXT\ndig dkim._domainkey.rohrkabel.eu TXT\ndig _dmarc.rohrkabel.eu TXT\n\n# CNAME Record\ndig smtp.rohrkabel.eu CNAME\ndig imap.rohrkabel.eu CNAME\ndig ldap.rohrkabel.eu CNAME\n\n# TTL Record\ndig rohrkabel.eu TTL\n\n# PTR Record IPv4\ndig -x 109.123.246.64\ndig +short -x 109.123.246.64\n\n# PTR Record IPv6\ndig -x 2a02:c206:3010:2208::1\ndig +short -x 2a02:c206:3010:2208::1\n\n# find the delegation path to DNS zone\ndig +trace rohrkabel.eu\ndig +trace mail.rohrkabel.eu\n\n# \ndig +nocmd +noall +answer +ttlid A mail.rohrkabel.eu\ndig +nocmd +noall +answer +ttlid AAAA mail.rohrkabel.eu\n\n#\ndig +multiline +noall +answer +nocmd rohrkabel.eu ANY\n\n# using a specific DNS server\ndig @79.143.182.242 +short pla.rohrkabel.eu CNAME\ndig @79.143.182.242 +short ldap.rohrkabel.eu CNAME\ndig @8.8.8.8 +short rohrkabel.eu NS\ndig @79.143.182.242 +short rohrkabel.eu A\ndocker compose exec postfix-mailcow dig mx gmail.com @unbound\n</code></pre>","tags":["linux","tipps","tricks"]},{"location":"linux/tipps-und-tricks/#tipp","title":"Tipp","text":"Tipp","tags":["linux","tipps","tricks"]},{"location":"plugins/privacy/","title":"Privacy","text":""},{"location":"tutorials/docker/","title":"Docker","text":"<p><code>Docker</code><sup>1</sup> ist eine freie Software zur Isolierung von Anwendungen mit Hilfe von <code>Containervirtualisierung</code><sup>2</sup>.</p> <p>Docker vereinfacht die Bereitstellung von Anwendungen, weil sich Container, die alle n\u00f6tigen Pakete enthalten, leicht als Dateien transportieren und installieren lassen. Container gew\u00e4hrleisten die Trennung und Verwaltung der auf einem Rechner genutzten Ressourcen.</p> <ol> <li> <p>Wikipedia - Docker \u21a9</p> </li> <li> <p>Wikipedia - Containervirtualisierung \u21a9</p> </li> </ol>"},{"location":"tutorials/docker/authelia/","title":"Authelia - Test","text":""},{"location":"tutorials/docker/bacula/","title":"Bacula - Enterprise Backup Solution","text":""},{"location":"tutorials/docker/dockerinstall/","title":"Docker unter  Linux installieren","text":"<p>Info</p> <p>Es werden \u00fcberwiegend die <code>virtuellen Maschienen</code> (VM) mit den Betriebssystemen <code>Rocky Linux</code>, <code>Oracle</code>, <code>Debian</code> und <code>Ubuntu</code> benutzt. Die VM's laufen entweder auf dem eigenen Server (ProxMox VE)<sup>1</sup> oder in <code>Rechenzentren</code> cloudbasiert.</p> Docker unter <code>Rocky Linux | Oracle</code> installieren Docker installDocker update <pre><code># Install docker Repository on Rocky Linux | Oracle\ndnf install -y yum-utils\ndnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\n# Install docker\ndnf -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\nsystemctl enable --now docker containerd\nsystemctl status docker\n\n# Running Docker as a non-root user\nusermod -aG docker jhahn\ngroups jhahn\nlid -g docker\n\n# check docker version\ndocker --version\n</code></pre> <pre><code># update docker\ndnf update\n\n# check vocker version\ndocker version\n</code></pre> Docker unter <code>Debian | Ubuntu</code> installieren docker installDocker update <pre><code># Install docker Repository on Debian | Ubuntu\n\n# Add Docker's official GPG key:\napt-get update\napt-get install ca-certificates curl\ninstall -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\nchmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n\"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \\\n$(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\ntee /etc/apt/sources.list.d/docker.list &gt; /dev/null\napt-get update\n\n# install docker\napt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\n# Running Docker as a non-root user\nusermod -aG docker jhahn\ngroups jhahn\nlibuser-lid -g docker\n</code></pre> <pre><code># update docker\napt-get update &amp;&amp; apt-get dist-upgrade\n\n# check vocker version\ndocker version\n</code></pre> <code>Docker-compose</code> binary installieren docker-compose binary <code>install | update</code>Aliases f\u00fcr docker-compose - alle OSPATH unter <code>RockyLinux | Oracle</code> erg\u00e4nzen <pre><code># check latest version under\nhttps://api.github.com/repos/docker/compose/releases/latest\n\n# install docker-compose binary\nif [ -f /usr/local/bin/docker-compose ]; then \\mv /usr/local/bin/docker-compose /usr/local/bin/docker-compose_old; fi\ncd /tmp &amp;&amp; curl -s https://api.github.com/repos/docker/compose/releases/latest \\\n| grep browser_download_url \\\n| grep docker-compose-linux-x86_64 \\\n| cut -d '\"' -f 4 \\\n| wget -qi -\nchmod +x docker-compose-linux-x86_64\n\\mv docker-compose-linux-x86_64 /usr/local/bin/docker-compose\ncd /usr/local/bin/ &amp;&amp; docker-compose --version\nln -s /usr/local/bin/docker-compose /usr/bin/\ndocker-compose version\n</code></pre> <pre><code># ganz unten einf\u00fcgen\nvim /root/.bashrc\n---\n...\n# Aliases f\u00fcr docker-compose\nalias dc='docker-compose'\nalias dclogs='docker-compose logs -f --tail=1000'\nalias dcup='docker-compose up'\nalias dcdown='docker-compose down'\nalias dcexec='docker-compose exec'\n</code></pre> <pre><code># File /etc/profile.d/usr_local.sh erstellen\necho 'export PATH=$PATH:/usr/local/bin' &gt; /etc/profile.d/usr_local.sh\n\n# Check PATH\nsudo su\nenv |grep PATH\ndocker-compose version\n</code></pre> Was benutzen: Docker compose <code>Plugin</code> oder binary <code>Datei</code>? <p>Docker compose ist ein Tool, das die Verwaltung von Docker-Containern in komplexen Anwendungen vereinfacht. Man kann entweder das Binary extra installieren oder docker compose Plugin installieren. Die Syntax der Befehlen ist \u00e4hnlich. Unten sind ein paar Beispiele.</p> docker compose plugindocker-compose binary <pre><code>cd /opt/mkdocsmaterial\ndocker compose --help\ndocker compose ps\ndocker compose exec nginx-mkdocs sh\ndocker compose stop nginx-mkdocs\ndocker compose start nginx-mkdocs\ndocker compose version\n</code></pre> <pre><code>cd /opt/mkdocsmaterial\ndocker-compose --help\ndocker-compose ps\ndocker-compose exec nginx-mkdocs sh\ndocker-compose stop nginx-mkdocs\ndocker-compose start nginx-mkdocs\ndocker-compose version\n</code></pre> <ol> <li> <p>ProxMox VE \u21a9</p> </li> </ol>"},{"location":"tutorials/docker/glpi/","title":"GLPI - IT Asset Management","text":"<p>What is GLPI?</p> <p> <code>GLPI</code><sup>1</sup> is a web-based <code>open source</code><sup>2</sup> application helping companies to manage their information system. The solution is able to build an inventory of all the organization's assets and to manage administrative and financial tasks. The system's functionalities help IT Administrators to create a database of technical resources, as well as a management and history of maintenances actions. Users can declare incidents or requests (based on asset or not) thanks to the Helpdesk feature.</p>","tags":["Docker","GLPI","Inventory"]},{"location":"tutorials/docker/glpi/#algemeine-information","title":"Algemeine Information","text":"<p>Allgemeine Information \u00fcber GLPI</p> <p> <code>GLPI</code> ist sehr vielseitig. Die Anwendung ist modular aufgebaut: Inventarisierung, Verwaltung von Hard- und Software, Ticketsystem usw. Man kann den Funktionsumfang mit Hilfe von <code>Plugins</code> erweitern. F\u00fcr die Inventarisierung wird entweder ein <code>GLPI Agent</code> oder eine Anwendung namens <code>OCS Inventory</code> verwendet. Ich bevorzuge <code>OCS Inventory</code>. F\u00fcr jede Anwendungen habe ich ein <code>Docker Image</code> gebaut, sodass die Installation und das Update sehr schnell erfolgen k\u00f6nnen. Die Docker Images befinden sich auf dem [Docker Hub]<sup>3</sup>. Die Links zu Docker Images: <code>GLPI Docker Image</code> und <code>OCS Inventory Docker image</code>. <code>Hier</code> ist die Beschreibung wie man <code>OCS Inventory</code> installiert und konfiguriert.</p>","tags":["Docker","GLPI","Inventory"]},{"location":"tutorials/docker/glpi/#install-glpi-as-docker-container","title":"Install GLPI as <code>docker container</code>","text":"<p>Jeder Container repr\u00e4sentiert eine einzelne Anwendung, die in einem \u00fcberbr\u00fcckten (Bridged) Netzwerk verbunden sind:</p> <ul> <li> GLPI IT Asset Management.</li> <li> OCS Inventory Open computers and software inventory.</li> <li> MariaDB Datenbank.</li> <li> Nginx Webserver f\u00fcr Komponenten des Stacks.</li> <li> Memcached Distributed memory object caching system.</li> </ul>","tags":["Docker","GLPI","Inventory"]},{"location":"tutorials/docker/glpi/#bereiten-sie-ihr-system-vor","title":"Bereiten Sie Ihr System vor","text":"<p>Bevor Sie <code>GLPI</code> installieren, sollten Sie einige Voraussetzungen \u00fcberpr\u00fcfen:</p> <p>Info</p> <ul> <li><code>Docker</code> Dienst muss auf dem Host installiert sein.</li> <li>Traefik muss als <code>Docker Service</code> installiert sein.</li> <li><code>MariaDB</code> muss entweder als <code>Container</code> im gleichen <code>Docker Stack</code> laufen oder als extra <code>Docker Service</code> installiert sein.</li> <li>For OCS Inventory: Port <code>4443 TCP</code> muss auf dem <code>Docker Host</code> ge\u00f6ffnet werden, damit der OCS Inventory Agent eine Verbindung zum Server aufbauen kann.</li> <li>Einen DNS-Record z.B. <code>glpi.myfirma.de</code> erstellen.</li> </ul>","tags":["Docker","GLPI","Inventory"]},{"location":"tutorials/docker/glpi/#glpi-installieren","title":"GLPI installieren","text":"GLPI unter <code>Rocky Linux | Oracle</code> einrichten Create foldersDownload config filesSet firewall rulesMariaDB create my.cnf <pre><code>DOCKERDIR=/opt/inventory\nmkdir -p ${DOCKERDIR}/data/{glpi,crond,crontabs,mariadb}\nmkdir -p ${DOCKERDIR}/data/glpi/{files,plugins,config}\nmkdir -p ${DOCKERDIR}/data/crond/{5min,15min,30min,hourly,daily,weekly,monthly}\nmkdir -p ${DOCKERDIR}/data/mariadb/{dbdata,socket,config}\nchown -R 100:101 ${DOCKERDIR}/data/glpi/*\ncd ${DOCKERDIR}\ntree -d -L 5 ${DOCKERDIR}\n</code></pre> <pre><code>DOCKERDIR=/opt/inventory\ncd ${DOCKERDIR}\nwget https://raw.githubusercontent.com/johann8/alpine-glpi/master/docker-compose.yml\nwget https://raw.githubusercontent.com/johann8/alpine-glpi/master/docker-compose.override.yml\nwget https://raw.githubusercontent.com/johann8/alpine-glpi/master/.env\n</code></pre> <pre><code># Set firewall rules\nfirewall-cmd --zone=public --add-port=4443/tcp --permanent\nfirewall-cmd --reload\nfirewall-cmd --zone=public --list-all\n</code></pre> <pre><code>DOCKERDIR=/opt/inventory\ncd ${DOCKERDIR}\ncat &gt; data/mariadb/config/my.cnf &lt;&lt; 'EOL'\n[mysqld]\ndefault-time-zone              = 'Europe/Berlin'\ncharacter-set-client-handshake = FALSE\ncharacter-set-server           = utf8mb4\ncollation-server               = utf8mb4_unicode_ci\nmax_allowed_packet             = 192M\nmax-connections                = 350\nkey_buffer_size                = 0\nread_buffer_size               = 192K\nsort_buffer_size               = 2M\ninnodb_buffer_pool_size        = 24M\nread_rnd_buffer_size           = 256K\ntmp_table_size                 = 24M\nperformance_schema             = 0\ninnodb-strict-mode             = 0\nthread_cache_size              = 8\nquery_cache_type               = 0\nquery_cache_size               = 0\nmax_heap_table_size            = 48M\nthread_stack                   = 256K\nskip-host-cache\nlog-warnings                   = 0\nevent_scheduler                = 1\n\n[client]\ndefault-character-set          = utf8mb4\n\n[mysql]\ndefault-character-set          = utf8mb4\nEOL\n</code></pre>","tags":["Docker","GLPI","Inventory"]},{"location":"tutorials/docker/glpi/#glpi-customise-compose-and-config-files","title":"GLPI: Customise compose and config files","text":"GLPI: Customise compose and config files docker-compose.ymldocker-compose.override.yml.env <pre><code>---\nnetworks:\n  inventoryNet_frontend:\n    driver: bridge\n    driver_opts:\n      com.docker.network.enable_ipv6: \"false\"\n    ipam:\n      driver: default\n      config:\n        - subnet: ${SUBNET_FRONTEND}.0/24\n  inventoryNet_backend:\n    driver: bridge\n    driver_opts:\n      com.docker.network.enable_ipv6: \"false\"\n    internal: true\n    ipam:\n      driver: default\n      config:\n        - subnet: ${SUBNET_BACKEND}.0/24\n\nservices:\n\n  #\n  ### === OCS Inventory Web APP ===\n  #\n  ocsapp:\n    image: johann8/alpine-ocs:${VERSION_OCS}\n    container_name : ocsapp\n    restart: always\n    #ports:                                # commented, if traefik is used\n    #- ${PORT_OCS_EXT}:80                # commented, if traefik is used\n  volumes:\n    - \"${DOCKERDIR}/data/ocsinventory/perlcomdata:/etc/ocsinventory-server\"\n    - \"${DOCKERDIR}/data/ocsinventory/ocsreportsdata:/usr/share/ocsinventory-reports/ocsreports/extensions\"\n    - \"${DOCKERDIR}/data/ocsinventory/varlibdata:/var/lib/ocsinventory-reports\"\n    - \"${DOCKERDIR}/data/ocsinventory/httpdconfdata:/etc/apache2/conf.d\"\n  environment:\n    TZ: ${TZ}\n    OCS_INVENTOTRY_INSTALL: false        # should be 'true' if Ocsinventory does not install. After installation please set to 'false'\n    OCS_DB_SERVER: ${OCS_DB_SERVER}\n    OCS_DB_USER: ${OCS_DB_USER}\n    OCS_DB_PASS: ${OCS_DB_PASS}\n    OCS_DB_NAME: ${OCS_DB_NAME}\n    # See documentation to set up SSL for MySQL\n    OCS_SSL_ENABLED: 0\n    #OCS_DISABLE_API_MODE: 0              # comment this var, if api should be activated\n  depends_on:\n    - mariadb\n  hostname: ${HOSTNAME_INVENTORY}.${DOMAINNAME}\n  networks:\n    - inventoryNet_frontend\n    - inventoryNet_backend\n\n  #\n  ### === OCS Inventory Nginx Proxy ===\n  #\n  ocsproxy:\n    image: nginx:stable-alpine3.17\n    container_name: ocsproxy\n    restart: always\n  ports:\n    - \"4443:443\"                          # For OCS Agents\n  volumes:\n    - ${DOCKERDIR}/data/nginx/config:/etc/nginx/templates\n    - ${DOCKERDIR}/data/nginx/certs:/etc/nginx/certs\n    - ${DOCKERDIR}/data/nginx/auth:/etc/nginx/auth\n  environment:\n    # 80 or 443\n    LISTEN_PORT: 443\n    # empty or ssl\n    PORT_TYPE: \"ssl\"\n    SSL_CERT: ocs.crt\n    SSL_KEY: ocs.key\n    # OCS Api user restriction (default ocsapi/ocapi)\n    API_AUTH_FILE: ocsapi.htpasswd\n    # OCS Download\n    READ_TIMEOUT: 300\n    CONNECT_TIMEOUT: 300\n    SEND_TIMEOUT: 300\n    MAX_BODY_SIZE: 1G\n  depends_on:\n    - ocsapp\n  networks:\n    - inventoryNet_frontend\n\n  #\n  ### === GLPI Container ===\n  #\n  glpi:\n    image: johann8/alpine-glpi:${VERSION}\n    container_name: glpi\n    hostname: glpi\n    restart: unless-stopped\n    depends_on:\n      - mariadb\n    volumes:\n      - ${DOCKERDIR}/data/glpi/files:/var/www/glpi/files/:rw\n      - ${DOCKERDIR}/data/glpi/plugins:/var/www/glpi/plugins/:rw\n      - ${DOCKERDIR}/data/glpi/config:/var/www/glpi/config/:rw\n      # For crontab: comment out what you need\n      #- ${DOCKERDIR}/data/crond/5min:/etc/periodic/5min/\n      #- ${DOCKERDIR}/data/crond/15min:/etc/periodic/15min/\n      #- ${DOCKERDIR}/data/crond/30min:/etc/periodic/30min/\n      #- ${DOCKERDIR}/data/crond/hourly:/etc/periodic/hourly/\n      - ${DOCKERDIR}/data/crond/daily:/etc/periodic/daily/\n      - ${DOCKERDIR}/data/crond/weekly:/etc/periodic/weekly/\n      - ${DOCKERDIR}/data/crond/monthly:/etc/periodic/monthly/\n      - ${DOCKERDIR}/data/crontabs:/etc/crontabs/\n    environment:\n      GLPI_LANG: ${GLPI_LANG}\n      TZ: ${TZ}\n      MARIADB_HOST: ${MARIADB_GLPI_HOST}\n      MARIADB_PORT: ${MARIADB_GLPI_PORT}\n      MARIADB_DATABASE: ${MARIADB_GLPI_DATABASE}\n      MARIADB_USER: ${MARIADB_GLPI_USER}\n      MARIADB_PASSWORD: ${MARIADB_GLPI_PASSWORD}\n    #ports:                                 # commented, if traefik is used\n      #- ${PORT_GLPI_EXT}:8080              # commented, if traefik is used\n    networks:\n      - inventoryNet_frontend\n      - inventoryNet_backend\n\n  #\n  ### === MEMCACHED ===\n  #\n  memcached:\n    image: memcached:alpine3.18\n    container_name: memcached\n    restart: always\n    depends_on:\n      - glpi\n    environment:\n      - TZ=${TZ}\n    command: [\"-m\", \"128\"]\n    networks:\n      - inventoryNet_frontend\n\n  #\n  ### === MariaDB Database ===\n  #\n  mariadb:\n    image: mariadb:${VERSION_DB}\n    container_name: mariadb\n    stop_grace_period: 45s\n    restart: unless-stopped\n    # remove comment after install\n    healthcheck:\n      test: \"mysqladmin ping -h localhost -u$${OCS_DB_USER} --password=$${OCS_DB_PASS}\"\n      interval: 45s\n      timeout: 10s\n      retries: 5\n    volumes:\n      - \"${DOCKERDIR}/data/mariadb/dbdata:/var/lib/mysql:rw\"\n      - \"${DOCKERDIR}/data/mariadb/config:/etc/mysql/conf.d:ro\"\n      #- \"${DOCKERDIR}/data/mariadb/sql:/docker-entrypoint-initdb.d\"\n      #- \"${DOCKERDIR}/data/mariadb/socket:/var/run/mysqld\"\n    environment:\n      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}\n      # OCS Inventory Database - created automatically\n      MARIADB_DATABASE:      ${OCS_DB_NAME}\n      MARIADB_USER:          ${OCS_DB_USER}\n      MARIADB_PASSWORD:      ${OCS_DB_PASS}\n      # GLPI Database - must be created manually (see below)\n      MARIADB_GLPI_DATABASE: ${MARIADB_GLPI_DATABASE}\n      MARIADB_GLPI_USER: ${MARIADB_GLPI_USER}\n      MARIADB_GLPI_PASSWORD: ${MARIADB_GLPI_PASSWORD}\n    ports:\n      - \"3306:3306\"\n    networks:\n      inventoryNet_backend:\n        ipv4_address: ${IP_ADDRESS}\n</code></pre> <pre><code>---\nservices:\n\nocsapp:\n  labels:\n    - \"traefik.enable=true\"\n    - \"traefik.docker.network=proxy\"\n    - \"traefik.http.routers.ocs-secure.entrypoints=websecure\"\n    - \"traefik.http.routers.ocs-secure.middlewares=default-chain@file,rate-limit@file\"\n    - \"traefik.http.routers.ocs-secure.rule=Host(`${HOSTNAME_OCS}.${DOMAINNAME}`)\"\n    - \"traefik.http.routers.ocs-secure.service=ocs\"\n    #- \"traefik.http.routers.ocs-secure.tls.certresolver=produktion\"             # f\u00fcr eigene Zertifikate\n    - \"traefik.http.routers.ocs-secure.tls=true\"\n    - \"traefik.http.services.ocs.loadbalancer.sticky.cookie.httpOnly=true\"\n    - \"traefik.http.services.ocs.loadbalancer.sticky.cookie.secure=true\"\n    - \"traefik.http.services.ocs.loadbalancer.server.port=${PORT_OCS}\"\n  networks:\n    - proxy\n\nglpi:\n  labels:\n    - \"traefik.enable=true\"\n    - \"traefik.docker.network=proxy\"\n    - \"traefik.http.routers.glpi-secure.entrypoints=websecure\"\n    - \"traefik.http.routers.glpi-secure.middlewares=default-chain@file,rate-limit@file\"\n    - \"traefik.http.routers.glpi-secure.rule=Host(`${HOSTNAME_GLPI}.${DOMAINNAME}`)\"\n    - \"traefik.http.routers.glpi-secure.service=glpi\"\n    #- \"traefik.http.routers.glpi-secure.tls.certresolver=produktion\"             # f\u00fcr eigene Zertifikate\n    - \"traefik.http.routers.glpi-secure.tls=true\"\n    - \"traefik.http.services.glpi.loadbalancer.sticky.cookie.httpOnly=true\"\n    - \"traefik.http.services.glpi.loadbalancer.sticky.cookie.secure=true\"\n    - \"traefik.http.services.glpi.loadbalancer.server.port=${PORT_GLPI}\"\n  networks:\n    - proxy\n\nnetworks:\n  proxy:\n    external: true\n</code></pre> <pre><code>### === SYSTEM ===\nTZ=Europe/Berlin\nDOCKERDIR=/opt/inventory\n\n### === Network ===\nDOMAINNAME=myfirma.de\nHOSTNAME_OCS=ocs\nHOSTNAME_INVENTORY=ocsinventory            # For inventory - client access\nPORT_OCS=80\nHOSTNAME_GLPI=glpi\nPORT_GLPI=8080\nSUBNET_FRONTEND=172.16.208\nSUBNET_BACKEND=172.16.209\n\n### === APP OCS ===\nVERSION_OCS=latest\nOCS_SSL_ENABLED=0\nOCS_DB_SERVER=mariadb\nOCS_DB_PORT=3306\nOCS_DB_NAME=ocsweb\nOCS_DB_USER=ocsuser\n# pwgen -1cnsB 25 1\nOCS_DB_PASS=7mRaTF9R7oKzJRNAiguokMnLL\n\n\n### === APP GLPI ===\nGLPI_LANG=de_DE\nVERSION=latest\nUPLOAD_MAX_FILESIZE=100M\nPOST_MAX_SIZE=50M\nMARIADB_GLPI_HOST=mariadb\nMARIADB_GLPI_PORT=3306\nMARIADB_GLPI_DATABASE=glpidb\nMARIADB_GLPI_USER=glpiuser\n# pwgen -1cnsB 25 1\nMARIADB_GLPI_PASSWORD=Mt3AofMNdAYUjPEtdYboVJXEn\n\n### === MariaDB ===\nVERSION_DB=10.11\n# pwgen -1cnsB 30 1\nMARIADB_ROOT_PASSWORD=3rjWcLssmfzaiwWpWYJWrqP9gaboW7\nIP_ADDRESS=${SUBNET_BACKEND}.10\n</code></pre>","tags":["Docker","GLPI","Inventory"]},{"location":"tutorials/docker/glpi/#mysql-datenbank-anlegen-falls-externe-mysql-datenbank-benutzt-wird","title":"MySQL Datenbank anlegen, falls externe MySQL Datenbank benutzt wird","text":"GLPI: MySQL Datenbank anlegen <pre><code># set variables\nMYSQL_ROOT_PW=MySuperRootPassWord-\nMYSQL_GLPI_DB=\"glpi\"\nMYSQL_GLPI_DB_USER_NAME=\"glpi\"\nMYSQL_GLPI_DB_USER_PW=$(pwgen -s1 25)\nMYSQL_GLPI_DB_USER_SYNC_PW=$(pwgen -s1 25) \nMySQL_HOST_IP_ADDRESS=172.16.18.2\n\n# create DB and user\nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"create database \"${MYSQL_GLPI_DB}\" character set utf8\"\nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"CREATE USER \"${MYSQL_GLPI_DB_USER_NAME}\"\"\nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"grant all on \"${MYSQL_GLPI_DB}\".*  to 'glpi'@'%' identified by '${MYSQL_GLPI_DB_USER_PW}'\"\nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"FLUSH PRIVILEGES\"\n\n# create sync user - synchro\nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"CREATE USER 'synchro'@'%' IDENTIFIED BY '${MYSQL_GLPI_DB_USER_SYNC_PW}'\" \nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"GRANT USAGE ON *.* TO 'synchro'@'%' IDENTIFIED BY '${MYSQL_GLPI_DB_USER_SYNC_PW}'\" \nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"GRANT SELECT ON ocsweb.* TO 'synchro'@'%'\" \nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"GRANT DELETE ON ocsweb.deleted_equiv TO 'synchro'@'%'\" \nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"GRANT UPDATE (CHECKSUM) ON ocsweb.hardware TO 'synchro'@'%'\" \n#mysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"UPDATE mysql.user SET Password=PASSWORD('${GLPI_PW}') WHERE User='synchro'\" \nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"FLUSH PRIVILEGES\"\n\n# Safe access data\necho \"# **** GLPI Install *****\" &gt; /root/glpi_install.txt\necho \"MYSQL_GLPI_DB: $MYSQL_GLPI_DB\" &gt;&gt; /root/glpi_install.txt\necho \"MYSQL_GLPI_DB_USER_NAME: $MYSQL_GLPI_DB_USER_NAME\" &gt;&gt; /root/glpi_install.txt\necho \"MYSQL_GLPI_DB_USER_PW: $MYSQL_GLPI_DB_USER_PW\" &gt;&gt; /root/glpi_install.txt\necho \"MYSQL_ROOT_PW: $MYSQL_ROOT_PW\" &gt;&gt; /root/glpi_install.txt\necho \"MYSQL_GLPI_DB_USER_SYNC_PW: $MYSQL_GLPI_DB_USER_SYNC_PW\" &gt;&gt; /root/glpi_install.txt\necho \"MySQL_HOST_IP_ADDRESS: $MySQL_HOST_IP_ADDRESS\" &gt;&gt; /root/glpi_install.txt\n</code></pre>","tags":["Docker","GLPI","Inventory"]},{"location":"tutorials/docker/glpi/#der-erste-start-von-glpi-docker-container","title":"Der erste Start von <code>GLPI</code> Docker Container","text":"docker compose (Plugin)docker-compose (Standalone) <pre><code>cd /opt/inventory\ndocker compose up -d\n\n# Zeigt Status an\ndocker compose ps\n\n# Zeigt Logdaten an\ndocker compose logs -f\n</code></pre> <pre><code>cd /opt/inventory\ndocker-compose up -d\n\n# Zeigt Status an\ndocker-compose ps\n\n# Zeigt Logdaten an\ndocker-compose logs -f\n</code></pre>","tags":["Docker","GLPI","Inventory"]},{"location":"tutorials/docker/glpi/#seite-aufrufen","title":"Seite aufrufen","text":"<p>Wenn keine Fehlermeldungen erschienen sind kann man die Startseite von Traefik aufrufen.</p> <p>Die Anmeldedaten f\u00fcr <code>GLPI Login</code></p> <pre><code>- **URL**: https://glpi.myfirma.de\n- **User**: glpi\n- **Password**: glpi (Bitte das Passwort sofort \u00e4ndern)\n</code></pre> <ol> <li> <p> Wikipedia - GLPI \u21a9</p> </li> <li> <p> Github - GLPI \u21a9</p> </li> <li> <p> Docker Hub \u21a9</p> </li> </ol>","tags":["Docker","GLPI","Inventory"]},{"location":"tutorials/docker/mariadb/","title":"MariaDB","text":""},{"location":"tutorials/docker/meshcentral/","title":"MeshCentral","text":"<p>What is MeshCentral?</p> <p> <code>MeshCentral</code><sup>1</sup> is a <code>open source</code><sup>2</sup> full computer management web site. With MeshCentral, you can run your own web server to remotely manage and control computers on a local network or anywhere on the internet. Once you get the server started, create device group and download and install an agent on each computer you want to manage. A minute later, the new computer will show up on the web site and you can take control of it. MeshCentral includes full web-based remote desktop, terminal and file management capability.</p>","tags":["Docker","Meschcentral","Remote","Support"]},{"location":"tutorials/docker/meshcentral/#algemeine-information","title":"Algemeine Information","text":"<p>Allgemeine Information \u00fcber MeshCentral</p> <p>Am einfachsten l\u00e4sst sich <code>MeshCentral</code> as Docker Container installieren. Man kann entweder <code>offizielles MeshCentral Docker Image</code> oder ein <code>selbstgebautes Docker Image</code> benutzen. F\u00fcr den Fernzugriff muss ein <code>MeshCentral Agent</code> auf dem Ger\u00e4t installiert sein. Selbstgebautes MeshCentral Docker Image befindet sich auf dem <code>Docker Hub</code><sup>3</sup>. Anweisungen zu Installation und Konfiguration findet man weiter unten.</p>","tags":["Docker","Meschcentral","Remote","Support"]},{"location":"tutorials/docker/meshcentral/#install-meshcentral-as-docker-container","title":"Install MeshCentral as <code>docker container</code>","text":"<p>Jeder Container repr\u00e4sentiert eine einzelne Anwendung, die in einem \u00fcberbr\u00fcckten (Bridged) Netzwerk verbunden sind:</p> <ul> <li> MeshCentral Full computer management web site.</li> <li> MongoDB Datenbank.</li> </ul>","tags":["Docker","Meschcentral","Remote","Support"]},{"location":"tutorials/docker/meshcentral/#bereiten-sie-ihr-system-vor","title":"Bereiten Sie Ihr System vor","text":"<p>Bevor Sie <code>OCS Inventory</code> installieren, sollten Sie einige Voraussetzungen \u00fcberpr\u00fcfen:</p> <p>Info</p> <ul> <li><code>Docker</code> Dienst muss auf dem Host installiert sein.</li> <li>Traefik muss als <code>Docker Service</code> installiert sein.</li> <li><code>MongoDB</code><sup>4</sup> muss entweder als <code>Container</code> im gleichen <code>Docker Stack</code> laufen oder als extra <code>Docker Service</code> installiert sein.</li> <li>Einen DNS-Record z.B. <code>mc.myfirma.de</code> erstellen.</li> </ul>","tags":["Docker","Meschcentral","Remote","Support"]},{"location":"tutorials/docker/meshcentral/#meshcentral-installieren","title":"MeshCentral installieren","text":"<p>Alle genutzte Netzwerke anzeigen lassen</p> <pre><code>egrep -r 'SUBNET|IPV4_NETWORK' /opt/*\n</code></pre> MeshCentral unter <code>Rocky Linux | Oracle</code> einrichten Create foldersDownload config files <pre><code>DOCKERDIR=/opt/meshcentral\nmkdir -p ${DOCKERDIR}/data/{mongodb,mc}\nmkdir -p ${DOCKERDIR}/data/mc/{data,user_files,backups,web}\nmkdir -p ${DOCKERDIR}/data/mongodb/dbdata\ncd ${DOCKERDIR}\ntree -d -L 5 ${DOCKERDIR}\n</code></pre> <pre><code>DOCKERDIR=/opt/meshcentral\ncd ${DOCKERDIR}\nwget https://raw.githubusercontent.com/johann8/alpine-meshcentral/master/docker-compose.yml\nwget https://raw.githubusercontent.com/johann8/alpine-meshcentral/master/docker-compose.override.yml\nwget https://raw.githubusercontent.com/johann8/alpine-meshcentral/master/.env\n</code></pre>","tags":["Docker","Meschcentral","Remote","Support"]},{"location":"tutorials/docker/meshcentral/#meshcentral-customise-compose-and-config-files","title":"MeshCentral: Customise compose and config files","text":"MeshCentral: Customise compose and config files docker-compose.ymldocker-compose.override.yml.envdata/mc/data/config.json <pre><code>---\nnetworks:\n  meshcentralNet:\n    driver: bridge\n    driver_opts:\n      com.docker.network.enable_ipv6: \"true\"\n    ipam:\n      driver: default\n      config:\n        - subnet: ${IPV4_NETWORK:-172.26.8}.0/24\n        - subnet: ${IPV6_NETWORK:-fd4d:6169:6c63:6f08}::/64\n\nservices:\n\n  #\n  ### === MeshCentral Container ===\n  #\n  meshcentral:\n    restart: on-failure:10\n    container_name: meshcentral\n    image: ghcr.io/ylianst/meshcentral:${MC_VERSION}\n    #image: johann8/alpine-meshcentral:${MC_VERSION}\n    # Only for Apache comment out\n    #ports:\n      #- 127.0.0.1:8084:443  #MeshCentral will moan and try everything not to use port 80, but you can also use it if you so desire, just change the config.json according to your needs\n      #- 8086:443\n    environment:\n      - TZ=${TZ}\n      - HOSTNAME=${HOSTNAME_MC}\n      - REVERSE_PROXY=${REVERSE_PROXY}\n      - REVERSE_PROXY_TLS_PORT=${REVERSE_PROXY_TLS_PORT}\n      - NODE_ENV=${NODE_ENV}\n      - USE_TRAEFIK=${USE_TRAEFIK}\n      - PORT=${PORT}\n      - USE_MONGODB=${USE_MONGODB}\n      - MONGO_URL=${MONGO_URL}\n      - MONGO_DB_NAME=${MONGO_DB_NAME}\n      - MONGO_MC_USERNAME=${MONGO_MC_USERNAME}\n      - MONGO_MC_USER_PASSWORD=${MONGO_MC_USER_PASSWORD}\n      - IFRAME=${IFRAME}\n      - ALLOW_NEW_ACCOUNTS=${ALLOW_NEW_ACCOUNTS}\n      - WEBRTC=${WEBRTC}\n      - LOCALSESSIONRECORDING=${LOCALSESSIONRECORDING}\n      - MINIFY=${MINIFY}\n    volumes:\n      # config.json and other important files live here. A must for data persistence\n      - \"${DOCKERDIR}/data/mc/data:/opt/meshcentral/meshcentral-data\"\n      # where file uploads for users live\n      - \"${DOCKERDIR}/data/mc/user_files:/opt/meshcentral/meshcentral-files\"\n      # location for the meshcentral-backups\n      - \"${DOCKERDIR}/data/mc/backups:/opt/meshcentral/meshcentral-backups\"\n      # location for site customization files\n      - \"${DOCKERDIR}/data/mc/web:/opt/meshcentral/meshcentral-web\"\n    env_file:\n      - .env\n    depends_on:\n      - mongodb\n    networks:\n    - meshcentralNet\n\n  #\n  ### === MongoDB Container ===\n  #\n  mongodb:\n    #image: mongo:latest\n    image: mongo:6.0\n    container_name: mongodb\n    restart: on-failure:10\n    environment:\n      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}\n      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}\n    volumes:\n      # mongodb data-directory - A must for data persistence\n      - \"${DOCKERDIR}/data/mongodb/dbdata:/data/db\"\n    env_file:\n      - .env\n    networks:\n      - meshcentralNet\n</code></pre> <pre><code>---\nservices:\n\n  meshcentral:\n    labels:\n      - \"traefik.enable=true\"\n\n      ### ==== to https ====\n      - \"traefik.http.routers.meshcentral-secure.entrypoints=websecure\"\n      - \"traefik.http.routers.meshcentral-secure.rule=Host(`${HOSTNAME0}.${DOMAINNAME}`)\"\n      - \"traefik.http.routers.meshcentral-secure.tls=true\"\n      - \"traefik.http.routers.meshcentral-secure.tls.certresolver=production\"  # f\u00fcr eigene Zertifikate\n      ### ==== to service ====\n      - \"traefik.http.routers.meshcentral-secure.service=meshcentral\"\n      - \"traefik.http.services.meshcentral.loadbalancer.server.port=${PORT}\"\n      - \"traefik.http.services.meshcentral.loadbalancer.passHostHeader=true\"\n      - \"traefik.docker.network=proxy\"\n      - \"traefik.http.routers.meshcentral-secure.middlewares=secHeaders@file\"\n      #- \"traefik.http.routers.meshcentral-secure.middlewares=secHeaders@file,traefik-compress@file\"\n      #- \"traefik.http.routers.meshcentral-secure.middlewares=authelia@docker,rate-limit@file,secHeaders@file\"\n    networks:\n      - proxy\n\nnetworks:\n  proxy:\n    external: true\n</code></pre> <pre><code>### === SYSTEM ===\nTZ=Europe/Berlin\nDOCKERDIR=/opt/meshcentral\n\n### === Network ===\nDOMAINNAME=myfirma.de\nHOSTNAME0=mc\nHOSTNAME_MC=${HOSTNAME0}.${DOMAINNAME}\nPORT=4430\nREVERSE_PROXY=${HOSTNAME_MC}\nREVERSE_PROXY_TLS_PORT=443\nIPV4_NETWORK=172.24.8\nIPV6_NETWORK=fd4d:6169:6c63:6f08\n\n#\n### === APP Meshcentral ===\n#\n# Set MeshCentral to Produktion\nNODE_ENV=production\n\n# meshcentral version\nMC_VERSION=latest\n\n# RP traefik\nUSE_TRAEFIK=\"true\"\n\n# use mongodb\n# generate password: pwgen -1cnsB 25 1\nUSE_MONGODB=true\nMONGO_MC_USERNAME=meshuser\nMONGO_MC_USER_PASSWORD=MySuperPassword123\nMONGO_DB_NAME=meshcentral\n\n# set already exist mongo connection string url here\nMONGO_URL=\n\n# or set following init params for new mongodb, use it with docker-compose file with mongodb version\n# pwgen -1cnsB 30 1\nMONGO_INITDB_ROOT_USERNAME=admin\nMONGO_INITDB_ROOT_PASSWORD=MySuperRootPassword456\n\n#set to true if you wish to enable iframe support\nIFRAME=false\n\n#set to false if you want disable self-service creation of new accounts besides the first (admin)\nALLOW_NEW_ACCOUNTS=false\n\n#set to true to enable WebRTC - per documentation it is not officially released with meshcentral, but is solid enough to work with. Use with caution\nWEBRTC=true\n\n# set to true to allow session recording\nLO CALSESSIONRECORDING=false\n\n# set to enable or disable minification of json, reduces traffic\nMINIFY=true\n</code></pre> <pre><code>SESSIONKEY=$(pwgen -1ycnsB --remove-chars=\". ^ $ * ; ~ ' _ ? @ : , &amp; | ! \\\" \\`\" 50); echo \"SessionKey: ${SESSIONKEY}\"\nDBENCRYPTKEY=$(pwgen -1ycnsB --remove-chars=\". ^ $ * ; ~ ' _ ? @ : , &amp; | ! \\\" \\`\" 35); echo \"DbEncryptKey: ${DBENCRYPTKEY}\"\ncd /opt/meshcentral\ncat &gt; data/mc/data/config.json &lt;&lt; 'EOL'\n{\n  \"$schema\": \"http://info.meshcentral.com/downloads/meshcentral-config-schema.json\",\n  \"settings\": {\n    \"cert\": \"mc.myfirma.de\",\n    \"WANonly\": true,\n    \"_LANonly\": true,\n    \"_debug\": true,\n    \"sessionKey\": \"ChangeME=MySuperSessionKey777777\",\n    \"_CookieEncoding\": \"hex\",\n    \"Port\": 4430,\n    \"AliasPort\": 443,\n    \"RedirPort\": 800,\n    \"RedirAliasPort\": 80,\n    \"TLSOffload\": \"traefik\",\n    \"TrustedProxy\": \"traefik\",\n    \"_UserAllowedIP\": \"127.0.0.1,192.168.0.0/16\",\n    \"_UserBlockedIP\": \"127.0.0.1,::1\",\n    \"_MaintenanceMode\": true,\n    \"mongoDb\": \"mongodb://meshuser:MySuperPassword123@mongodb:27017/meshcentral\",\n    \"MongoDbName\": \"meshcentral\",\n    \"Mongodbcol\": \"meshcentral\",\n    \"MongoDbBulkOperations\": true,\n    \"DbEncryptKey\": \"ChangeME=MySupaerPW8888\",\n    \"_MongoDbChangeStream\": true,\n    \"agentSignLock\": true,\n    \"_AgentPing\": 40,\n    \"AgentPong\": 60,\n    \"_BrowserPing\": 40,\n    \"BrowserPong\": 60,\n    \"AllowHighQualityDesktop\": true,\n    \"desktopMultiplex\": true,\n    \"plugins\": {\n      \"enabled\": true\n    },\n    \"WebRTC\": true,\n    \"WebRtcConfig\": {\n      \"iceServers\": [\n        { \"urls\": \"stun:stun.l.google.com:19302\" },\n        { \"urls\": \"stun:stun.gmx.de:3478\" },\n        { \"urls\": \"stun:stun.1und1.de:3478\" }\n      ]\n    },\n    \"watchDog\": { \"interval\": 100, \"timeout\": 400 },\n    \"SelfUpdate\": false,\n    \"nice404\": true,\n    \"_CompressionWirdUnterTraefikEingeschaltetDeshalbCompressionUntenAus\": true,\n    \"Compression\": true,\n    \"WsCompression\": true,\n    \"AgentWsCompression\": false,\n    \"NoAgentUpdate\": 0,\n    \"AllowFraming\": false,\n    \"_AllowLoginToken\": true,\n    \"AuthLog\": \"/opt/meshcentral/meshcentral-data/auth.log\",\n    \"no2FactorAuth\": false,\n    \"CookieIpCheck\": true,\n    \"MaxInvalidLogin\": {\n      \"time\": 5,\n      \"count\": 5,\n      \"coolofftime\": 30\n    },\n    \"AutoBackup\": {\n      \"backupIntervalHours\": 24,\n      \"keepLastDaysBackup\": 15,\n      \"backupPath\": \"/opt/meshcentral/meshcentral-backups\"\n    },\n    \"DesktopMultiplexor\": true\n  },\n  \"domains\": {\n        \"\": {\n    \"title\": \"REMOTE SUPPORT PORTAL\",\n    \"title2\": \"MyFirma\",\n    \"NewAccounts\": false,\n    \"AllowSavingDeviceCredentials\": true,\n    \"scrollToTop\": true,\n    \"nightMode\": 0,\n    \"welcomeText\": \"&lt;a href='https://myfirma.de/' target='_blank' style='text-decoration: none;'&gt;Wassermann Gruppe&lt;/a&gt; - Ihr Dienstleister in Berlin und Brandenburg\",\n    \"_welcomeText\": \"&lt;a href='https://myfirma.de/' target='_blank' onMouseOver='this.style.color='red'' style='text-decoration: none;'&gt;Wassermann Gruppe&lt;/a&gt; - Ihr Dienstleister in Berlin und Brandenburg\",\n    \"Footer\": \"&lt;a href='https://myfirma.de/' target='_blank' style='text-decoration: none;'&gt;Wassermann Gruppe&lt;/a&gt; - Ihr Dienstleister in Berlin und Brandenburg\",\n    \"_LoginFooter\": \"&lt;a href='https://myfirma.de/' target='_blank' style='text-decoration: none;'&gt;Wassermann Gruppe&lt;/a&gt; - Ihr Dienstleister in Berlin und Brandenburg\",\n    \"_welcomePicture\": \"sdc.jpg\",\n    \"__comment__\": \"Autogenehmigung nach 30 Sec\",\n    \"consentMessages\": {\n      \"con sentTimeout\" : 30,\n      \"autoAcceptOnTimeout\": true\n    },\n    \"agentCustomization\": {\n      \"_displayName\": \"MyCompany Agent\",\n      \"_description\": \"Allows MyCompany to provide full service remote support to this computer.\",\n      \"companyName\": \"Wassermann Gruppe\",\n      \"_serviceName\": \"MyCompany Remote Support Agent\",\n      \"_fileName\": \"MyCompanyAgent\"\n    },\n    \"_agentConfig\": [ \"webSocketMaskOverride=1\" ],\n    \"certUrl\": \"mc.reduktor.de\",\n    \"LoginKey\":\"HITC94\",\n    \"agentInviteCodes\": true,\n    \"PasswordRequirements\": {\n      \"min\": 10,\n      \"max\": 64,\n      \"upper\": 1,\n      \"lower\": 1,\n      \"numeric\": 1,\n      \"nonalpha\": 1,\n      \"Force2Factor\": true,\n      \"skip2factor\": \"127.0.0.1,172.26.0.0/24\"\n    },\n    \"terminal\": {\n      \"linuxshell\": \"any\",\n      \"launchCommand\": {\n        \"linux\": \"cd /tmp\\nclear\\necho \\\"Hello Linux\\\"\\n\",\n        \"_darwin\": \"clear\\necho \\\"Hello MacOS\\\"\\n\",\n        \"_freebsd\": \"clear\\necho \\\"Hello FreeBSD\\\"\\n\"\n      }\n    },\n    \"_userNameIsEmail\": true,\n    \"_ManageAllDeviceGroups\":[\"info@reduktor.de\"],\n    \"_IpBlockedUserRedirect\": \"https://www.microsoft.com\",\n    \"_sessionRecording\": {\n      \"filepath\": \"/opt/meshcentral/meshcentral-recordings\"\n    },\n    \"GuestDeviceSharing\": {\n      \"__comment__\": \"Time in Minutes\",\n      \"maxSessionTime\": 240\n    },\n    \"novnc\":true,\n    \"mstsc\":true,\n    \"ssh\":true,\n    \"GeoLocation\": true\n    }\n  },\n  \"_letsencrypt\": {\n    \"__comment__\": \"Requires NodeJS 8.x or better, Go to https://letsdebug.net/ first before&gt;\",\n    \"_email\": \"myemail@mydomain.com\",\n    \"_names\": \"myserver.mydomain.com\",\n    \"production\": false\n  },\n  \"smtp\": {\n  \"host\": \"mx01.myfirma.de\",\n  \"port\": 587,\n  \"from\": \"meshcentral@myfirma.de\",\n  \"user\": \"meshcentral@myfirma.de\",\n  \"pass\": \"MySupperPW33\",\n  \"tls\": false\n  }\n}\nEOL\n</code></pre>","tags":["Docker","Meschcentral","Remote","Support"]},{"location":"tutorials/docker/meshcentral/#der-erste-start-von-meshcentral-docker-container","title":"Der erste Start von <code>MeshCentral</code> Docker Container","text":"docker compose (Plugin)docker-compose (Standalone) <pre><code>cd /opt/meshcentral\ndocker compose up -d\n\n# Zeigt Status an\ndocker compose ps\n\n# Zeigt Logdaten an\ndocker compose logs -f\n</code></pre> <pre><code>cd /opt/meshcentral\ndocker-compose up -d\n\n# Zeigt Status an\ndocker-compose ps\n\n# Zeigt Logdaten an\ndocker-compose logs -f\n</code></pre>","tags":["Docker","Meschcentral","Remote","Support"]},{"location":"tutorials/docker/meshcentral/#mongodb-benutzer-und-passwort-erstellen","title":"MongoDB <code>Benutzer</code> und <code>Passwort</code> erstellen","text":"MongoDB <code>Benutzer</code> und <code>Passwort</code> erstellen <pre><code>DOCKERDIR=/opt/meshcentral\ncd ${DOCKERDIR}\ncat .env |grep MONGO_\ndocker compose exec mongodb mongosh --host localhost -u admin\nuse meshcentral\n\n# Das Passwort ist in der Datei .env definiert\ndb.createUser(\n    {\n        user: \"meshuser\",\n        pwd: \"-ChangeMe-\",\n        roles:[\n            {\n                role: \"readWrite\",\n                db: \"meshcentral\"\n            }\n        ]\n    }\n);\n\nshow users\nquit\n</code></pre>","tags":["Docker","Meschcentral","Remote","Support"]},{"location":"tutorials/docker/meshcentral/#docker-stack-neu-starten","title":"Docker Stack neu starten","text":"<pre><code>docker-compose down &amp;&amp; docker-compose up -d\ndocker-compose logs -f\n</code></pre>","tags":["Docker","Meschcentral","Remote","Support"]},{"location":"tutorials/docker/meshcentral/#seite-aufrufen","title":"Seite aufrufen","text":"<p>Wenn keine Fehlermeldungen erschienen sind kann man die Startseite von <code>MeshCentral</code> aufrufen.</p> <ol> <li> <p> Wikisuite - MeshCentral \u21a9</p> </li> <li> <p> Github - MeshCentral \u21a9</p> </li> <li> <p> Docker Hub \u21a9</p> </li> <li> <p> Wikipedia - MongoDB \u21a9</p> </li> </ol>","tags":["Docker","Meschcentral","Remote","Support"]},{"location":"tutorials/docker/mkdocs/","title":"MkDocs","text":"<p>\ud83d\udcd6 What is Material for MkDocs?</p> <p>Material for MkDocs is a powerful documentation framework on top of MkDocs, a static site generator for project documentation.<sup>1</sup> If you're familiar with Python, you can install Material for MkDocs with <code>pip</code>, the Python package manager. If not, we recommend using <code>docker</code>.</p>"},{"location":"tutorials/docker/mkdocs/#mkdocs-create-docker-config-files","title":"MkDocs - Create docker config files","text":"MkDocs: Create docker config files docker-compose.ymldocker-compose.override.yml.env <pre><code>networks:\n  mkdocsNet:\n    ipam:\n      driver: default\n      config:\n        - subnet: ${IPV4_NETWORK:-172.26.27}.0/24\n        - subnet: ${IPV6_NETWORK:-fd4d:6169:6c63:6f27}::/64\n\nservices:\n\n#\n### === NGINX Container ===\n#\n  nginx-mkdocs:\n    image: nginx:alpine\n    container_name: nginx-mkdocs\n    restart: on-failure:10\n    #mem_limit: 4G\n    #mem_reservation: 2G\n    security_opt:\n      - no-new-privileges:true\n    #ports:\n      #- \"8005:80\"\n    volumes:\n      - ./data/mkdocs/site:/var/www/html\n      - ./data/nginx/templates:/etc/nginx/templates\n    environment:\n      - TZ=${TZ}\n      - NGINX_HOST=localhost                # set your local domain or your live domain\n    networks:\n      mkdocsNet:\n        ipv4_address: ${IPV4_NETWORK:-}.5\n        ipv6_address: ${IPV6_NETWORK:-fd4d:6169:6c63:6f27}::5\n\n#\n### === MKDOCS Container ===\n#\n\n#  mkdocs:\n#    container_name: mkdocs\n#    hostname: mkdocs\n#    image: squidfunk/mkdocs-material:${MKDOCS_VERSION}\n#    restart: unless-stopped\n#    security_opt:\n#      - no-new-privileges:true\n#    #ports:\n#      #- \"8005:8000\"\n#    volumes:\n#      - ./data/mkdocs:/docs\n#    stdin_open: true\n#    tty: true\n#    environment:\n#      TZ: Europe/Berlin\n#    networks:\n#      - mkdocsNet\n</code></pre> <pre><code>services:\n\n  nginx-mkdocs:\n    labels:\n      - \"traefik.enable=true\"\n      ### ==== to https ====\n      - \"traefik.http.routers.nginx-mkdocs-secure.entrypoints=websecure\"\n      - \"traefik.http.routers.nginx-mkdocs-secure.rule=Host(`${HOSTNAME0}.${DOMAINNAME}`)\"\n      - \"traefik.http.routers.nginx-mkdocs-secure.tls=true\"\n      - \"traefik.http.routers.nginx-mkdocs-secure.tls.certresolver=production\"                      # f\u00fcr eigene Zertifikate\n      - \"traefik.http.routers.nginx-mkdocs-secure.tls.domains[0].main=${HOSTNAME0}.${DOMAINNAME}\"   # F\u00fcr Letsencrypt: Set main domain\n      ### ==== to service ====\n      - \"traefik.http.routers.nginx-mkdocs-secure.service=nginx-mkdocs\"\n      - \"traefik.http.services.nginx-mkdocs.loadbalancer.server.port=${PORT0}\"\n      - \"traefik.docker.network=proxy\"\n      ### ==== redirect to authelia for secure login ====\n      - \"traefik.http.routers.nginx-mkdocs-secure.middlewares=rate-limit@file,secHeaders@file\"\n      #- \"traefik.http.routers.nginx-mkdocs-secure.middlewares=authelia@docker,rate-limit@file,secHeaders@file\"\n    networks:\n      - proxy\n\nnetworks:\n  proxy:\n    external: true\n</code></pre> <pre><code>### === SYSTEM ===\nTZ=Europe/Berlin\nDOCKERDIR=/opt/mkdocsmaterial\n\n### === Network ===\nDOMAINNAME=myfirma.de\nHOSTNAME0=docs\nPORT0=80\nIPV4_NETWORK=172.24.27\nIPV6_NETWORK=fd4d:6169:6c63:6f27\n\n### === Mkdocs ====\nMKDOCS_VERSION=latest\n</code></pre>"},{"location":"tutorials/docker/mkdocs/#mkdocs-create-mkdocs-config-and-folder-tree","title":"MkDocs - Create mkdocs config and folder tree","text":"MkDocs: Create mkdocs config files and folder tree mkdocs.ymldirectory treeindex.mdabout.md <pre><code>site_name: HITC Docs\nsite_url: https://docs.myfirma.de/\nsite_author: Vorname Nachname\nsite_description: &gt;-\n  Write your documentation in Markdown and create a professional static site in\n  minutes \u2013 searchable, customizable, in 60+ languages, for all devices\n\n# Repository\n#repo_name: squidfunk/mkdocs-material\n#repo_url: https://github.com/squidfunk/mkdocs-material\n\n# Copyright\ncopyright: &gt;\n  Copyright &amp;copy; 2023 - 2024 Myfirma -\n  &lt;a href=\"#__consent\"&gt; Change cookie settings&lt;/a&gt;\n\n# Page tree\nnav:\n  - 'Home': 'index.md'\n  - 'Tutorials':\n    - 'Docker':\n    - tutorials/docker/index.md\n    - 'Docker Install': 'tutorials/docker/dockerinstall/index.md'\n    - 'Traefik RP': 'tutorials/docker/traefik/index.md'\n    - 'Authelia': 'tutorials/docker/authelia/index.md'\n    - 'Bacula': 'tutorials/docker/bacula/index.md'\n    - 'GLPI': 'tutorials/docker/glpi/index.md'\n    - 'OCS Inventory': 'tutorials/docker/ocsinventory/index.md'\n    - 'Mkdocs': 'tutorials/docker/mkdocs/index.md'\n    - 'OpenLDAP': 'tutorials/docker/openldap/index.md'\n    - 'PhpLdapAdmin': 'tutorials/docker/phpldapadmin/index.md'\n  - 'About': 'about.md'\n\n# Configuration\ntheme:\n  name: 'material'\n    language: de\n    features:\n      - announce.dismiss\n      - content.action.edit\n      - content.action.view\n      - content.code.annotate\n      - content.code.copy\n      # - content.code.select\n      # - content.footnote.tooltips\n      # - content.tabs.link\n      - content.tooltips\n      #- header.autohide\n      #- navigation.expand\n      #- navigation.footer\n      - navigation.indexes\n      #- navigation.instant\n      # - navigation.instant.prefetch\n      # - navigation.instant.progress\n      # - navigation.prune\n      #- navigation.sections\n      - navigation.tabs\n      # - navigation.tabs.sticky\n      - navigation.path\n      - navigation.top\n      - navigation.tracking\n      - search.highlight\n      - search.share\n      - search.suggest\n      - toc.follow\n      # - toc.integrate\n\n  palette:\n  # Palette toggle for automatic mode\n    - media: \"(prefers-color-scheme)\"\n      toggle:\n        icon: material/brightness-auto\n        name: Switch to light mode\n\n  # Light mode\n  - media: \"(prefers-color-scheme: light)\"\n    toggle:\n      icon: material/brightness-7\n      name: Switch to dark mode\n    scheme: default\n    primary: indigo\n    accent: indigo\n    toggle:\n      icon: material/weather-sunny\n      name: Switch to dark mode\n\n  # Dark mode\n  - media: \"(prefers-color-scheme: dark)\"\n    scheme: slate\n    #primary: black\n    #accent: indigo\n    primary: indigo\n    accent: blue\n    toggle:\n      icon: material/brightness-4\n      name: Switch to system preference\n\n  font:\n    text: Roboto\n    code: Roboto Mono\n\n  #  favicon: assets/favicon.png\n  icon:\n    logo: logo\n\n# Plugins\nplugins:\n  #- blog\n  - search:\n      separator: '[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&amp;[lg]t;|(?!\\b)(?=[A-Z][a-z])'\n  - minify:\n      minify_html: true\n\n# Extensions\nmarkdown_extensions:\n  - abbr\n  - admonition\n  - attr_list\n  - def_list\n  - footnotes\n  - md_in_html\n  - toc:\n      permalink: true\n  - pymdownx.arithmatex:\n      generic: true\n  - pymdownx.betterem:\n      smart_enable: all\n  - pymdownx.caret\n  - pymdownx.details\n  - pymdownx.emoji:\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.keys\n  - pymdownx.magiclink:\n      normalize_issue_symbols: true\n  - pymdownx.mark\n  - pymdownx.smartsymbols\n  - pymdownx.snippets\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n      combine_header_slug: true\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.tilde\n\nextra:\n  status:\n    new: Recently added\n    deprecated: Deprecated\n  consent:\n    actions:\n      - accept\n      - reject\n      #- manage\n    title: Cookie consent\n    description: &gt;-\n      We use cookies to recognize your repeated visits and preferences, as well\n      as to measure the effectiveness of our documentation and whether users\n      find what they're searching for. With your consent, you're helping us to\n      make our documentation better.\n</code></pre> <pre><code># Erstellt Ordnerstruktur\nmkdir -p /opt/mkdocsmaterial/data/{mkdocs,nginx}\nmkdir -p /opt/mkdocsmaterial/data/mkdocs/docs\nmkdir -p /opt/mkdocsmaterial/data/nginx/templates\ncd /opt/mkdocsmaterial/\n\n# Zeigt Ordnerstruktur an\ntree -d -L 3 /opt/mkdocsmaterial/\n\n# Zeigt belegte Docker-Netzwerke an\negrep -r 'SUBNET|IPV4_NETWORK' /opt/*\n</code></pre> <pre><code>cd /opt/mkdocsmaterial\ncat &gt; data/mkdocs/docs/index.md &lt;&lt; 'EOL'\n---\ntitle: Home\nSummary: A brief description .\nAuthors: Johann Hahn\nDate:    Juli 08, 2024\n---\n\n# Welcome to the Documentation of `Wassermann Gruppe`!\nEOL\n</code></pre> <pre><code>cd /opt/mkdocsmaterial\ncat &gt; data/mkdocs/docs/index.md &lt;&lt; 'EOL'\n---\ntitle: Home\nSummary: A brief description .\nAuthors: Johann Hahn\nDate:    Juli 08, 2024\n---\n\n# \u00dcber Firma `Wassermann Gruppe`!\nEOL\n</code></pre>"},{"location":"tutorials/docker/mkdocs/#der-esrste-start-von-mkdocs-docker-container","title":"Der esrste Start von <code>MkDocs</code> Docker Container","text":"<p>HTML-Dateien werden im Verzeichnis <code>/opt/mkdocsmaterial/data/mkdocs/site</code> erstellt.</p> <pre><code>cd /opt/mkdocsmaterial\n\n# Erstellt neues Projekt\ndocker run --rm -it -v /opt/mkdocsmaterial/data/mkdocs:/docs squidfunk/mkdocs-material new .\n\n# Erstellt Doku's\ndocker run --rm -it -v /opt/mkdocsmaterial/data/mkdocs:/docs squidfunk/mkdocs-material build\n</code></pre>"},{"location":"tutorials/docker/mkdocs/#der-esrste-start-von-nginx-docker-container","title":"Der esrste Start von <code>NGINX</code> Docker Container","text":"docker compose (Plugin)docker-compose (Standalone) <pre><code>cd /opt/mkdocsmaterial\ndocker compose up -d\n\n# Zeigt Status an\ndocker compose ps\n\n# Zeigt Logdaten an\ndocker compose logs -f\n</code></pre> <pre><code>cd /opt/mkdocsmaterial\ndocker-compose up -d\n\n# Zeigt Status an\ndocker-compose ps\n\n# Zeigt Logdaten an\ndocker-compose logs -f\n</code></pre>"},{"location":"tutorials/docker/mkdocs/#seite-aufrufen","title":"Seite aufrufen","text":"<p>Wenn keine Fehlermeldungen erschienen sind kann man die Seite unter <code>https://docs.myfirma.de</code> aufrufen.</p> <ol> <li> <p>In 2016, Material for MkDocs started out as a simple theme for MkDocs, but over the course of several years, it's now much more than that \u2013 with the many built-in plugins, settings, and countless customization abilities, Material for MkDocs is now one of the simplest and most powerful frameworks for creating documentation for your project.\u00a0\u21a9</p> </li> </ol>"},{"location":"tutorials/docker/ocsinventory/","title":"OCS Inventory","text":"<p>What is OCS Inventory?</p> <p> <code>OCS Inventory</code><sup>1</sup> (Open Computers and Software Inventory Next Generation) is an assets management and deployment solution. Since 2001, OCS Inventory NG has been looking for making software and hardware more powerful. OCS Inventory NG asks its agents to know the software and hardware composition of every computer or server.</p>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#algemeine-information","title":"Algemeine Information","text":"<p>Allgemeine Information \u00fcber OCS Inventory</p> <p> <code>OCS Inventory</code> ist sehr vielseitig. Man kann den Funktionsumfang mit Hilfe von <code>Plugins</code> erweitern. The source code can be found on <code>Github</code><sup>2</sup>. F\u00fcr die Inventarisierung wird ein <code>Windows Agent</code> <code>Linux Agent</code> eingesetzt. F\u00fcr OCS Inventory Anwendung habe ich ein <code>Docker Image</code> gebaut, sodass die Installation und das Update sehr schnell erfolgen k\u00f6nnen. Das Docker Image befindet sich auf dem <code>Docker Hub</code><sup>3</sup>. Der Link zum Docker Image: <code>OCS Inventory Docker image</code>. <code>Hier</code> ist die Beschreibung wie man <code>GLPI</code> installiert und konfiguriert.</p>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#install-ocs-inventory-as-docker-container","title":"Install OCS Inventory as <code>docker container</code>","text":"<p>Jeder Container repr\u00e4sentiert eine einzelne Anwendung, die in einem \u00fcberbr\u00fcckten (Bridged) Netzwerk verbunden sind:</p> <ul> <li> GLPI IT Asset Management.</li> <li> OCS Inventory Open computers and software inventory.</li> <li> MariaDB Datenbank.</li> <li> Nginx Webserver f\u00fcr Komponenten des Stacks.</li> <li> Memcached Distributed memory object caching system.</li> </ul>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#bereiten-sie-ihr-system-vor","title":"Bereiten Sie Ihr System vor","text":"<p>Bevor Sie <code>OCS Inventory</code> installieren, sollten Sie einige Voraussetzungen \u00fcberpr\u00fcfen:</p> <p>Info</p> <ul> <li><code>Docker</code> Dienst muss auf dem Host installiert sein.</li> <li>Traefik muss als <code>Docker Service</code> installiert sein.</li> <li><code>MariaDB</code> muss entweder als <code>Container</code> im gleichen <code>Docker Stack</code> laufen oder als extra <code>Docker Service</code> installiert sein.</li> <li>Port <code>4443 TCP</code> muss auf dem <code>Docker Host</code> ge\u00f6ffnet werden, damit der OCS Inventory Agent eine Verbindung zum Server aufbauen kann.</li> <li>Einen DNS-Record z.B. <code>ocs.myfirma.de</code> erstellen.</li> </ul>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#ocs-inventory-installieren","title":"OCS Inventory installieren","text":"OCS Inventory unter <code>Rocky Linux | Oracle</code> einrichten Create foldersDownload config filesSet firewall rulesNGINX create config fileMariaDB create my.cnf <pre><code>DOCKERDIR=/opt/inventory\nmkdir -p ${DOCKERDIR}/data/ocsinventory/{perlcomdata,ocsreportsdata,varlibdata,httpdconfdata} \nmkdir -p ${DOCKERDIR}/data/mariadb/{config,dbdata,socket}\nmkdir -p ${DOCKERDIR}/data/nginx/{config,certs,auth}\nchown -R 101:101 ${DOCKERDIR}/data/ocsinventory/perlcomdata/\nchown -R 101:101 ${DOCKERDIR}/data/ocsinventory/ocsreportsdata/\nchown -R 101:101 ${DOCKERDIR}/data/ocsinventory/varlibdata/\ncd ${DOCKERDIR}\ntree -d -L 5 ${DOCKERDIR}\n</code></pre> <pre><code>DOCKERDIR=/opt/inventory\ncd ${DOCKERDIR}\nwget https://raw.githubusercontent.com/johann8/ocs-alpine/master/docker-compose.yml\nwget https://raw.githubusercontent.com/johann8/ocs-alpine/master/docker-compose.override.yml\nwget https://raw.githubusercontent.com/johann8/ocs-alpine/master/.env\nwget https://raw.githubusercontent.com/johann8/ocs-alpine/master/nginx/config/ocsinventory.conf.template\nmv ocsinventory.conf.template data/nginx/config\ncd ${DOCKERDIR}\n</code></pre> <pre><code># Set firewall rules\nfirewall-cmd --zone=public --add-port=4443/tcp --permanent\nfirewall-cmd --reload\nfirewall-cmd --zone=public --list-all\n</code></pre> <pre><code>DOCKERDIR=/opt/inventory\ncd ${DOCKERDIR}\ncat &gt; data/nginx/config/ocsinventory.conf.template &lt;&lt; 'EOL'\n##\n# You should look at the following URL's in order to grasp a solid understanding\n# of Nginx configuration files in order to fully unleash the power of Nginx.\n# https://www.nginx.com/resources/wiki/start/\n# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/\n# https://wiki.debian.org/Nginx/DirectoryStructure\n#\n# In most cases, administrators will remove this file from sites-enabled/ and\n# leave it as reference inside of sites-available where it will continue to be\n# updated by the nginx packaging team.\n#\n# This file will automatically load configuration files provided by other\n# applications, such as Drupal or Wordpress. These applications will be made\n# available underneath a path with that package name, such as /drupal8.\n#\n# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.\n##\n\n# OCS server configuration\n#\nserver {\n    listen ${LISTEN_PORT} ${PORT_TYPE} default_server;\n\n    ssl_certificate /etc/nginx/certs/${SSL_CERT};\n    ssl_certificate_key /etc/nginx/certs/${SSL_KEY};\n\n    location / {\n        proxy_redirect          off;\n        proxy_set_header        X-Forwarded-Proto $scheme;\n        proxy_set_header        Host              $http_host;\n        proxy_set_header        X-Real-IP         $remote_addr;\n        proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;\n        proxy_set_header        X-Frame-Options   SAMEORIGIN;\n        proxy_pass              http://ocsapp;\n    }\n\n#    location /ocsapi {\n#        auth_basic \"OCS Api area\";\n#        auth_basic_user_file /etc/nginx/auth/${API_AUTH_FILE};\n#        proxy_pass              http://ocsapp/ocsapi;\n#    }\n\n    location /download {\n        proxy_read_timeout      ${READ_TIMEOUT};\n        proxy_connect_timeout   ${CONNECT_TIMEOUT};\n        proxy_send_timeout      ${SEND_TIMEOUT};\n        client_max_body_size    ${MAX_BODY_SIZE};\n    proxy_pass              http://ocsapp/download;\n    }\n}\nEOL\n</code></pre> <pre><code>DOCKERDIR=/opt/inventory\ncd ${DOCKERDIR}\ncat &gt; data/mariadb/config/my.cnf &lt;&lt; 'EOL'\n[mysqld]\ndefault-time-zone              = 'Europe/Berlin'\ncharacter-set-client-handshake = FALSE\ncharacter-set-server           = utf8mb4\ncollation-server               = utf8mb4_unicode_ci\nmax_allowed_packet             = 192M\nmax-connections                = 350\nkey_buffer_size                = 0\nread_buffer_size               = 192K\nsort_buffer_size               = 2M\ninnodb_buffer_pool_size        = 24M\nread_rnd_buffer_size           = 256K\ntmp_table_size                 = 24M\nperformance_schema             = 0\ninnodb-strict-mode             = 0\nthread_cache_size              = 8\nquery_cache_type               = 0\nquery_cache_size               = 0\nmax_heap_table_size            = 48M\nthread_stack                   = 256K\nskip-host-cache\nlog-warnings                   = 0\nevent_scheduler                = 1\n\n[client]\ndefault-character-set          = utf8mb4\n\n[mysql]\ndefault-character-set          = utf8mb4\nEOL\n</code></pre>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#ocs-inventory-customise-compose-and-config-files","title":"OCS Inventory: Customise compose and config files","text":"OCS Inventory: Customise compose and config files docker-compose.ymldocker-compose.override.yml.env <pre><code>---\nnetworks:\n  inventoryNet_frontend:\n    driver: bridge\n    driver_opts:\n      com.docker.network.enable_ipv6: \"false\"\n    ipam:\n      driver: default\n      config:\n        - subnet: ${SUBNET_FRONTEND}.0/24\n  inventoryNet_backend:\n    driver: bridge\n    driver_opts:\n      com.docker.network.enable_ipv6: \"false\"\n    internal: true\n    ipam:\n      driver: default\n      config:\n        - subnet: ${SUBNET_BACKEND}.0/24\n\nservices:\n\n  #\n  ### === OCS Inventory Web APP ===\n  #\n  ocsapp:\n    image: johann8/alpine-ocs:${VERSION_OCS}\n    container_name : ocsapp\n    restart: always\n    #ports:                                # commented, if traefik is used\n      #- ${PORT_OCS_EXT}:80                # commented, if traefik is used\n  volumes:\n    - \"${DOCKERDIR}/data/ocsinventory/perlcomdata:/etc/ocsinventory-server\"\n    - \"${DOCKERDIR}/data/ocsinventory/ocsreportsdata:/usr/share/ocsinventory-reports/ocsreports/extensions\"\n    - \"${DOCKERDIR}/data/ocsinventory/varlibdata:/var/lib/ocsinventory-reports\"\n    - \"${DOCKERDIR}/data/ocsinventory/httpdconfdata:/etc/apache2/conf.d\"\n  environment:\n    TZ: ${TZ}\n    OCS_INVENTOTRY_INSTALL: false        # should be 'true' if Ocsinventory does not install. After installation please set to 'false'\n    OCS_DB_SERVER: ${OCS_DB_SERVER}\n    OCS_DB_USER: ${OCS_DB_USER}\n    OCS_DB_PASS: ${OCS_DB_PASS}\n    OCS_DB_NAME: ${OCS_DB_NAME}\n    # See documentation to set up SSL for MySQL\n    OCS_SSL_ENABLED: 0\n    #OCS_DISABLE_API_MODE: 0              # comment this var, if api should be activated\n  depends_on:\n    - mariadb\n  hostname: ${HOSTNAME_INVENTORY}.${DOMAINNAME}\n  networks:\n    - inventoryNet_frontend\n    - inventoryNet_backend\n\n  #\n  ### === OCS Inventory Nginx Proxy ===\n  #\n  ocsproxy:\n    image: nginx:stable-alpine3.17\n    container_name: ocsproxy\n    restart: always\n  ports:\n    - \"4443:443\"                          # For OCS Agents\n  volumes:\n    - ${DOCKERDIR}/data/nginx/config:/etc/nginx/templates\n    - ${DOCKERDIR}/data/nginx/certs:/etc/nginx/certs\n    - ${DOCKERDIR}/data/nginx/auth:/etc/nginx/auth\n  environment:\n    # 80 or 443\n    LISTEN_PORT: 443\n    # empty or ssl\n    PORT_TYPE: \"ssl\"\n    SSL_CERT: ocs.crt\n    SSL_KEY: ocs.key\n    # OCS Api user restriction (default ocsapi/ocapi)\n    API_AUTH_FILE: ocsapi.htpasswd\n    # OCS Download\n    READ_TIMEOUT: 300\n    CONNECT_TIMEOUT: 300\n    SEND_TIMEOUT: 300\n    MAX_BODY_SIZE: 1G\n  depends_on:\n    - ocsapp\n  networks:\n    - inventoryNet_frontend\n\n  #\n  ### === GLPI Container ===\n  #\n  glpi:\n    image: johann8/alpine-glpi:${VERSION}\n    container_name: glpi\n    hostname: glpi\n    restart: unless-stopped\n    depends_on:\n      - mariadb\n    volumes:\n      - ${DOCKERDIR}/data/glpi/files:/var/www/glpi/files/:rw\n      - ${DOCKERDIR}/data/glpi/plugins:/var/www/glpi/plugins/:rw\n      - ${DOCKERDIR}/data/glpi/config:/var/www/glpi/config/:rw\n      # For crontab: comment out what you need\n      #- ${DOCKERDIR}/data/crond/5min:/etc/periodic/5min/\n      #- ${DOCKERDIR}/data/crond/15min:/etc/periodic/15min/\n      #- ${DOCKERDIR}/data/crond/30min:/etc/periodic/30min/\n      #- ${DOCKERDIR}/data/crond/hourly:/etc/periodic/hourly/\n      - ${DOCKERDIR}/data/crond/daily:/etc/periodic/daily/\n      - ${DOCKERDIR}/data/crond/weekly:/etc/periodic/weekly/\n      - ${DOCKERDIR}/data/crond/monthly:/etc/periodic/monthly/\n      - ${DOCKERDIR}/data/crontabs:/etc/crontabs/\n    environment:\n      GLPI_LANG: ${GLPI_LANG}\n      TZ: ${TZ}\n      MARIADB_HOST: ${MARIADB_GLPI_HOST}\n      MARIADB_PORT: ${MARIADB_GLPI_PORT}\n      MARIADB_DATABASE: ${MARIADB_GLPI_DATABASE}\n      MARIADB_USER: ${MARIADB_GLPI_USER}\n      MARIADB_PASSWORD: ${MARIADB_GLPI_PASSWORD}\n    #ports:                                 # commented, if traefik is used\n      #- ${PORT_GLPI_EXT}:8080              # commented, if traefik is used\n    networks:\n      - inventoryNet_frontend\n      - inventoryNet_backend\n\n  #\n  ### === MEMCACHED ===\n  #\n  memcached:\n    image: memcached:alpine3.18\n    container_name: memcached\n    restart: always\n    depends_on:\n      - glpi\n    environment:\n      - TZ=${TZ}\n    command: [\"-m\", \"128\"]\n    networks:\n      - inventoryNet_frontend\n\n  #\n  ### === MariaDB Database ===\n  #\n  mariadb:\n    image: mariadb:${VERSION_DB}\n    container_name: mariadb\n    stop_grace_period: 45s\n    restart: unless-stopped\n    # remove comment after install\n    healthcheck:\n      test: \"mysqladmin ping -h localhost -u$${OCS_DB_USER} --password=$${OCS_DB_PASS}\"\n      interval: 45s\n      timeout: 10s\n      retries: 5\n    volumes:\n      - \"${DOCKERDIR}/data/mariadb/dbdata:/var/lib/mysql:rw\"\n      - \"${DOCKERDIR}/data/mariadb/config:/etc/mysql/conf.d:ro\"\n      #- \"${DOCKERDIR}/data/mariadb/sql:/docker-entrypoint-initdb.d\"\n      #- \"${DOCKERDIR}/data/mariadb/socket:/var/run/mysqld\"\n    environment:\n      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}\n      # OCS Inventory Database - created automatically\n      MARIADB_DATABASE:      ${OCS_DB_NAME}\n      MARIADB_USER:          ${OCS_DB_USER}\n      MARIADB_PASSWORD:      ${OCS_DB_PASS}\n      # GLPI Database - must be created manually (see below)\n      MARIADB_GLPI_DATABASE: ${MARIADB_GLPI_DATABASE}\n      MARIADB_GLPI_USER: ${MARIADB_GLPI_USER}\n      MARIADB_GLPI_PASSWORD: ${MARIADB_GLPI_PASSWORD}\n    ports:\n      - \"3306:3306\"\n    networks:\n      inventoryNet_backend:\n        ipv4_address: ${IP_ADDRESS}\n</code></pre> <pre><code>---\nservices:\n\nocsapp:\n  labels:\n    - \"traefik.enable=true\"\n    - \"traefik.docker.network=proxy\"\n    - \"traefik.http.routers.ocs-secure.entrypoints=websecure\"\n    - \"traefik.http.routers.ocs-secure.middlewares=default-chain@file,rate-limit@file\"\n    - \"traefik.http.routers.ocs-secure.rule=Host(`${HOSTNAME_OCS}.${DOMAINNAME}`)\"\n    - \"traefik.http.routers.ocs-secure.service=ocs\"\n    #- \"traefik.http.routers.ocs-secure.tls.certresolver=produktion\"             # f\u00fcr eigene Zertifikate\n    - \"traefik.http.routers.ocs-secure.tls=true\"\n    - \"traefik.http.services.ocs.loadbalancer.sticky.cookie.httpOnly=true\"\n    - \"traefik.http.services.ocs.loadbalancer.sticky.cookie.secure=true\"\n    - \"traefik.http.services.ocs.loadbalancer.server.port=${PORT_OCS}\"\n  networks:\n    - proxy\n\nglpi:\n  labels:\n    - \"traefik.enable=true\"\n    - \"traefik.docker.network=proxy\"\n    - \"traefik.http.routers.glpi-secure.entrypoints=websecure\"\n    - \"traefik.http.routers.glpi-secure.middlewares=default-chain@file,rate-limit@file\"\n    - \"traefik.http.routers.glpi-secure.rule=Host(`${HOSTNAME_GLPI}.${DOMAINNAME}`)\"\n    - \"traefik.http.routers.glpi-secure.service=glpi\"\n    #- \"traefik.http.routers.glpi-secure.tls.certresolver=produktion\"             # f\u00fcr eigene Zertifikate\n    - \"traefik.http.routers.glpi-secure.tls=true\"\n    - \"traefik.http.services.glpi.loadbalancer.sticky.cookie.httpOnly=true\"\n    - \"traefik.http.services.glpi.loadbalancer.sticky.cookie.secure=true\"\n    - \"traefik.http.services.glpi.loadbalancer.server.port=${PORT_GLPI}\"\n  networks:\n    - proxy\n\nnetworks:\n  proxy:\n    external: true\n</code></pre> <pre><code>### === SYSTEM ===\nTZ=Europe/Berlin\nDOCKERDIR=/opt/inventory\n\n### === Network ===\nDOMAINNAME=myfirma.de\nHOSTNAME_OCS=ocs\nHOSTNAME_INVENTORY=ocsinventory            # For inventory - client access\nPORT_OCS=80\nHOSTNAME_GLPI=glpi\nPORT_GLPI=8080\nSUBNET_FRONTEND=172.16.208\nSUBNET_BACKEND=172.16.209\n\n### === APP OCS ===\nVERSION_OCS=latest\nOCS_SSL_ENABLED=0\nOCS_DB_SERVER=mariadb\nOCS_DB_PORT=3306\nOCS_DB_NAME=ocsweb\nOCS_DB_USER=ocsuser\n# pwgen -1cnsB 25 1\nOCS_DB_PASS=7mRaTF9R7oKzJRNAiguokMnLL\n\n\n### === APP GLPI ===\nGLPI_LANG=de_DE\nVERSION=latest\nUPLOAD_MAX_FILESIZE=100M\nPOST_MAX_SIZE=50M\nMARIADB_GLPI_HOST=mariadb\nMARIADB_GLPI_PORT=3306\nMARIADB_GLPI_DATABASE=glpidb\nMARIADB_GLPI_USER=glpiuser\n# pwgen -1cnsB 25 1\nMARIADB_GLPI_PASSWORD=Mt3AofMNdAYUjPEtdYboVJXEn\n\n### === MariaDB ===\nVERSION_DB=10.11\n# pwgen -1cnsB 30 1\nMARIADB_ROOT_PASSWORD=3rjWcLssmfzaiwWpWYJWrqP9gaboW7\nIP_ADDRESS=${SUBNET_BACKEND}.10\n</code></pre>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#generate-a-self-signed-certificate-for-server-ocsinventorymyfirmade","title":"Generate a self-signed certificate for server <code>ocsinventory.myfirma.de</code>","text":"OCS Inventory: Generate a self-signed certificate for server <code>ocsinventory.myfirma.de</code> <pre><code># Generate private key\nopenssl genrsa -out /etc/pki/tls/private/ca.key 2048 \n\n# Generate CSR (Common Name is ocsinventory.mydomain.de)\nopenssl req -new -key /etc/pki/tls/private/ca.key -out /etc/pki/tls/private/ca.csr\n\n# Generate Self Signed Key\nopenssl x509 -req -days 3650 -in /etc/pki/tls/private/ca.csr -signkey /etc/pki/tls/private/ca.key -out /etc/pki/tls/certs/ca.crt\nopenssl x509 -in  /etc/pki/tls/certs/ca.crt -text -noout\n\n# convert crt to pem\ncd /etc/pki/tls/certs &amp;&amp; openssl x509 -in ca.crt -out cacert.pem\ncd -\nopenssl x509 -in  /etc/pki/tls/certs/cacert.pem -text -noout\n\n# copy certificates\nDOCKERDIR=/opt/inventory\ncp /etc/pki/tls/private/ca.key ${DOCKERDIR}/data/nginx/certs/ocs.key\ncp /etc/pki/tls/certs/ca.crt ${DOCKERDIR}/data/nginx/certs/ocs.crt\ncp /etc/pki/tls/certs/cacert.pem ${DOCKERDIR}/\n</code></pre>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#generate-basic-auth-file-for-api-if-you-want-to-use-api","title":"Generate basic auth file for API (if you want to use API)","text":"OCS Inventory: Generate basic auth file for API <pre><code># Adjust password\nAPI_PASSWORD=MyPassword-123\nDOCKERDIR=/opt/inventory\nhtpasswd -bBc ${DOCKERDIR}/data/nginx/auth/ocsapi.htpasswd admin ${API_PASSWORD}\n</code></pre>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#der-erste-start-von-ocs-inventory-docker-container","title":"Der erste Start von <code>OCS Inventory</code> Docker Container","text":"docker compose (Plugin)docker-compose (Standalone) <pre><code>cd /opt/inventory\ndocker compose up -d\n\n# Zeigt Status an\ndocker compose ps\n\n# Zeigt Logdaten an\ndocker compose logs -f\n</code></pre> <pre><code>cd /opt/inventory\ndocker-compose up -d\n\n# Zeigt Status an\ndocker-compose ps\n\n# Zeigt Logdaten an\ndocker-compose logs -f\n</code></pre>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#seite-aufrufen","title":"Seite aufrufen","text":"<p>Wenn keine Fehlermeldungen erschienen sind kann man die Startseite von Traefik aufrufen.</p> <p>Die Anmeldedaten f\u00fcr <code>OCS Inventory Login</code></p> <pre><code>- **URL**: https://ocs.myfirma.de\n- **User**: admin\n- **Password**:  (Bitte das Passwort sofort \u00e4ndern)\n</code></pre>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#setup-ocs-inventory-plugins","title":"Setup OCS Inventory Plugins","text":"OCS Inventory: Setup Plugins Download pluginsExtract pluginsInstall plugins via WebGUI <pre><code>DOCKERDIR=/opt/inventory\ncd ${DOCKERDIR}/data/ocsinventory/ocsreportsdata/\n\n# Download Windows plugins\nwget https://github.com/PluginsOCSInventory-NG/officepack/releases/download/3.4/officepack.zip\nwget https://github.com/PluginsOCSInventory-NG/uptime/releases/download/2.1/uptime.zip\nwget https://github.com/PluginsOCSInventory-NG/winupdate/releases/download/3.0/winupdate.zip\nwget https://github.com/PluginsOCSInventory-NG/defaultwindowsapp/releases/download/v1.1/defaultwindowsapp.zip\nwget https://github.com/PluginsOCSInventory-NG/networkshare/releases/download/v3.0/networkshare.zip\nwget https://github.com/PluginsOCSInventory-NG/listprinters/releases/download/v2.0/listprinters.zip\nwget https://github.com/PluginsOCSInventory-NG/osinstall/releases/download/2.0/osinstall.zip\nwget https://github.com/PluginsOCSInventory-NG/winserverfeatures/releases/download/1.0/winserverfeatures.zip\nwget https://github.com/PluginsOCSInventory-NG/anydesk/releases/download/2.2/anydesk.zip\nwget https://github.com/PluginsOCSInventory-NG/security/releases/download/2.0/security.zip\nwget https://github.com/PluginsOCSInventory-NG/wmiproductlist/releases/download/2.0/wmiproductlist.zip\nwget https://github.com/PluginsOCSInventory-NG/winsecdetails/releases/download/1.0/winsecdetails.zip\n\n# Linux plugins\nwget https://github.com/PluginsOCSInventory-NG/crontabTasks/releases/download/v2.1/crontabtasks.zip\nwget https://github.com/PluginsOCSInventory-NG/lastpublicip/releases/download/1.1/lastpublicip.zip\n</code></pre> <pre><code>DOCKERDIR=/opt/inventory\ncd ${DOCKERDIR}/data/ocsinventory/ocsreportsdata/\nunzip officepack.zip &amp;&amp; rm -rf officepack.zip\nunzip uptime.zip -d uptime &amp;&amp; rm -rf uptime.zip\nunzip winupdate.zip &amp;&amp; rm -rf winupdate.zip\nunzip defaultwindowsapp.zip &amp;&amp; rm -rf defaultwindowsapp.zip\nunzip networkshare.zip &amp;&amp; rm -rf networkshare.zip\nunzip listprinters.zip &amp;&amp; rm -rf listprinters.zip\nunzip osinstall.zip &amp;&amp; rm -rf osinstall.zip\nunzip winserverfeatures.zip &amp;&amp; rm -rf winserverfeatures.zip\nunzip anydesk.zip &amp;&amp; rm -rf anydesk.zip &amp;&amp; chmod -R o-w anydesk\nunzip security.zip &amp;&amp; rm -rf security.zip\nunzip wmiproductlist.zip &amp;&amp; rm -rf wmiproductlist.zip\nunzip winsecdetails.zip &amp;&amp; rm -rf winsecdetails.zip\nunzip crontabtasks.zip &amp;&amp; rm -rf crontabtasks.zip\nunzip lastpublicip.zip &amp;&amp; rm -rf lastpublicip.zip\nchown -R 101:101 ${DOCKERDIR}/data/ocsinventory/ocsreportsdata/\n</code></pre> <pre><code>- Go to http://ocs.myfirma.de/ocsreports/\n- Login and go to =&gt;Extensions =&gt;Extensions manager\n</code></pre>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#ocs-inventory-configuration","title":"OCS Inventory configuration","text":"OCS Inventory: Configuration <ul> <li> <p>Configuration =&gt;General configuration =&gt;Server =&gt; Set as in picture  </p> </li> <li> <p>Configuration =&gt;General configuration =&gt;Deployment: DOWNLOAD -&gt; On;</p> </li> <li> <p>Configuration =&gt;General configuration =&gt;Interface: <pre><code>ACTIVE_NEWS -&gt; On\nLOG_GUI -&gt; On\n</code></pre></p> </li> <li> <p>Configuration =&gt;General configuration =&gt;Security: <pre><code>SECURITY_AUTHENTICATION_NB_ATTEMPT -&gt; 3\nSECURITY_AUTHENTICATION_TIME_BLOCK -&gt; 60\nSECURITY_PASSWORD_ENABLED -&gt; On\nSECURITY_PASSWORD_MIN_CHAR -&gt; 7\nSECURITY_PASSWORD_FORCE_NB -&gt; On\nECURITY_PASSWORD_FORCE_UPPER -&gt; On\n</code></pre></p> </li> <li> <p>Configuration =&gt;General configuration =&gt;Inventory files: <pre><code>GENERATE_OCS_FILES -&gt; On\nOCS_FILES_OVERWRITE -&gt; On\n</code></pre></p> </li> <li> <p>Configuration =&gt;General configuration =&gt;LDAP configuration =&gt; Set as in picture </p> </li> <li> <p>Configuration =&gt;Users =&gt;Profiles =&gt;sadmin =&gt; Set as in picture </p> </li> <li> <p>Manage =&gt;Assets categories =&gt; Set as in picture </p> </li> <li> <p>Manage =&gt;Administrative data =&gt; Set as in picture </p> </li> <li> <p>Inventory =&gt;Groups =&gt; Set as in picture  </p> </li> </ul>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#mysql-datenbank-anlegen-falls-externe-mysql-datenbank-benutzt-wird","title":"MySQL Datenbank anlegen, falls externe MySQL Datenbank benutzt wird","text":"OCS Inventory: MySQL Datenbank anlegen <pre><code># set variables\nMYSQL_ROOT_PW=MySuperRootPassWord-\nMYSQL_OCS_DB=\"ocsweb\"\nMYSQL_OCS_DB_USER_NAME=\"ocsuser\"\nMYSQL_OCS_DB_USER_PW=$(pwgen -s1 25)\nMySQL_HOST_IP_ADDRESS=172.16.18.2\n\n# create DB and user\nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"create database \"${MYSQL_OCS_DB}\" character set utf8\"\nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"CREATE USER \"${MYSQL_OCS_DB_USER_NAME}\"\"\nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"grant all on \"${MYSQL_OCS_DB}\".*  to 'ocs'@'%' identified by '${MYSQL_OCS_DB_USER_PW}'\"\nmysql --batch --user=root -h ${MySQL_HOST_IP_ADDRESS} --password=${MYSQL_ROOT_PW} -e \"FLUSH PRIVILEGES\"\n\n# Safe access data\necho \"# **** OCSInventory Install *****\" &gt; /root/ocsinventory_install.txt\necho \"MYSQL_OCS_DB: $MYSQL_OCS_DB\" &gt;&gt; /root/ocsinventory_install.txt\necho \"MYSQL_OCS_DB_USER_NAME: $MYSQL_OCS_DB_USER_NAME\" &gt;&gt; /root/ocsinventory_install.txt\necho \"MYSQL_OCS_DB_USER_PW: $MYSQL_OCS_DB_USER_PW\" &gt;&gt; /root/ocsinventory_install.txt\necho \"MYSQL_ROOT_PW: $MYSQL_ROOT_PW\" &gt;&gt; /root/ocsinventory_install.txt\necho \"MySQL_HOST_IP_ADDRESS: $MySQL_HOST_IP_ADDRESS\" &gt;&gt; /root/ocsinventory_install.txt\n</code></pre>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/ocsinventory/#install-ocsinventory-agent","title":"Install ocsinventory agent","text":"Install ocsinventory agent CentOS | Rocky | OracleDebian | UbuntuWindows <pre><code># add ocsinventory repo\ndnf install http://rpm.ocsinventory-ng.org/ocsinventory-release-latest.el8.ocs.noarch.rpm\ndnf config-manager --set-enabled powertools\ndnf install ocsinventory-agent net-snmp-perl perl-Parse-EDID\n\n# create backup of confog file\ncp /etc/ocsinventory/ocsinventory-agent.cfg /etc/ocsinventory/ocsinventory-agent.cfg_orig\n\n# edit ocsinventory config files\nsed -i -e '/# server = your.ocsserver.name/c\\server = https://ocsinventory.mydomain.de:4443/ocsinventory' /etc/ocsinventory/ocsinventory-agent.cfg\nsed -i -e 's/local =/basevarlib =/' \\\n       -e 's/# tag = your_tag/tag = Linux_VM/' /etc/ocsinventory/ocsinventory-agent.cfg \n\necho ' ' &gt;&gt; /etc/ocsinventory/ocsinventory-agent.cfg \necho '# Additional options' &gt;&gt; /etc/ocsinventory/ocsinventory-agent.cfg \necho 'debug=1' &gt;&gt; /etc/ocsinventory/ocsinventory-agent.cfg \necho 'ssl=1' &gt;&gt; /etc/ocsinventory/ocsinventory-agent.cfg \necho 'ca=/etc/ocsinventory/cacert.pem' &gt;&gt; /etc/ocsinventory/ocsinventory-agent.cfg \n\n# copy certificate \n# on ocsinventory server: \nDOCKERDIR=/opt/ocs\ncat ${DOCKERDIR}/cacert.pem\n\n# on ocsinventory client\nvim /etc/ocsinventory/cacert.pem\n--------------------\npaste hier cacert.pem\n--------------------\n\n# activate cron \nsed -i -e 's/OCSMODE\\[0\\]=none/OCSMODE\\[0\\]=cron/' /etc/sysconfig/ocsinventory-agent\n\n# test ocinventory\nmv /etc/cron.hourly/ocsinventory-agent /etc/cron.daily/\nbash /etc/cron.daily/ocsinventory-agent\ntail -f -n2000   /var/log/ocsinventory-agent/ocsinventory-agent.log\n\n# if everything works then disable debug\nsed -i -e \"s/debug=1/debug=0/\" /etc/ocsinventory/ocsinventory-agent.cfg \n</code></pre> <pre><code># create folder and file\nmkdir -p /var/log/ocsinventory-agent/\ntouch /var/log/ocsinventory-agent/ocsinventory-agent.log\n\n# add repo\ncurl -fsSL http://deb.ocsinventory-ng.org/pubkey.gpg | gpg --dearmor -o /etc/apt/trusted.gpg.d/ocs-archive-keyring.gpg\necho \"deb http://deb.ocsinventory-ng.org/debian/ bullseye main\" | sudo tee /etc/apt/sources.list.d/ocsinventory.list\napt-get update\n\n# Ocsinventory agent install and answer the questions as follows\napt-get install ocsinventory-agent\ny\n0\ny\ny\nhttps://ocsinventory.mydomain.de:4443\nn\ny\nLinux\ny\nenter\ny\ny\nenter\ny\n/var/log/ocsinventory-agent/ocsinventory-agent.log\nn\ny\n/etc/ocsinventory/cacert.pem\ny\nn\ny\n\n# show cron job\ncat /etc/cron.d/ocsinventory-agent\n-----------------------\nPATH=/usr/sbin:/usr/bin:/sbin:/bin\n3 8 * * * root /usr/bin/ocsinventory-agent --lazy &gt; /dev/null 2&gt;&amp;1\n----------------------\n\n# show config file\ncat /etc/ocsinventory/ocsinventory-agent.cfg \n\n# paste here cacert.pem certificate from ocsinventory server\nvim /etc/ocsinventory/cacert.pem\n------------------\npaste cacert.pem\n-----------------\n\n# run first inventory\n/usr/bin/ocsinventory-agent --lazy\n\n# show log\ntail -f -n2000   /var/log/ocsinventory-agent/ocsinventory-agent.log\n\n# if everything works then disable debug\nsed -i \"s/debug=1/debug=0/\" /etc/ocsinventory/ocsinventory-agent.cfg \n</code></pre> <pre><code>123\n</code></pre> <ol> <li> <p> Wikipedia - OCS Inventory \u21a9</p> </li> <li> <p> Github - OCS Inventory \u21a9</p> </li> <li> <p> Docker OCS Inventory \u21a9</p> </li> </ol>","tags":["Docker","OCS","Inventory"]},{"location":"tutorials/docker/openldap/","title":"OpenLDAP","text":"<p>What is OpenLDAP?</p> <p> <code>OpenLDAP</code><sup>1</sup> Das Lightweight Directory Access Protocol (LDAP) ist ein Netzwerkprotokoll zur Abfrage und \u00c4nderung von Informationen verteilter Verzeichnisdienste. LDAP ist der De-facto-Industriestandard f\u00fcr Authentifizierung, Autorisierung sowie Adress- und Benutzerverzeichnisse. Die meisten Softwareprodukte, die mit Benutzerdaten umgehen m\u00fcssen und am Markt relevant sind, unterst\u00fctzen LDAP. Standardport ist: - 389 f\u00fcr ungesicherte oder mit STARTTLS gesicherte Verbindungen -  636 f\u00fcr mit TLS gesicherte Verbindungen (LDAPS)</p>","tags":["Docker","OpenLDAP"]},{"location":"tutorials/docker/openldap/#algemeine-information","title":"Algemeine Information","text":"<p>Allgemeine Information \u00fcber OpenLDAP</p> <p> <code>OpenLDAP</code> ist sehr vielseitig. Die Anwendung ist modular aufgebaut: Inventarisierung, Verwaltung von Hard- und Software, Ticketsystem usw. Man kann den Funktionsumfang mit Hilfe von <code>Plugins</code> erweitern. F\u00fcr die Inventarisierung wird entweder ein <code>OpenLDAP Agent</code> oder eine Anwendung namens <code>OCS Inventory</code> verwendet. Ich bevorzuge <code>OCS Inventory</code>. F\u00fcr jede Anwendungen habe ich ein <code>Docker Image</code> gebaut, sodass die Installation und das Update sehr schnell erfolgen k\u00f6nnen. Die Docker Images befinden sich auf dem [Docker Hub]<sup>3</sup>. Die Links zu Docker Images: <code>OpenLDAP Docker Image</code> und <code>OCS Inventory Docker image</code>. <code>Hier</code> ist die Beschreibung wie man <code>OCS Inventory</code> installiert und konfiguriert.</p>","tags":["Docker","OpenLDAP"]},{"location":"tutorials/docker/openldap/#install-openldap-as-docker-container","title":"Install OpenLDAP as <code>docker container</code>","text":"<p>Jeder Container repr\u00e4sentiert eine einzelne Anwendung, die in einem \u00fcberbr\u00fcckten (Bridged) Netzwerk verbunden sind:</p> <ul> <li> OpenLDAP IT Asset Management.</li> <li> OCS Inventory Open computers and software inventory.</li> <li> MariaDB Datenbank.</li> <li> Nginx Webserver f\u00fcr Komponenten des Stacks.</li> <li> Memcached Distributed memory object caching system.</li> </ul>","tags":["Docker","OpenLDAP"]},{"location":"tutorials/docker/openldap/#bereiten-sie-ihr-system-vor","title":"Bereiten Sie Ihr System vor","text":"<p>Bevor Sie <code>OpenLDAP</code> installieren, sollten Sie einige Voraussetzungen \u00fcberpr\u00fcfen:</p> <p>Info</p> <ul> <li><code>Docker</code> Dienst muss auf dem Host installiert sein.</li> <li>Traefik muss als <code>Docker Service</code> installiert sein.</li> <li><code>MariaDB</code> muss entweder als <code>Container</code> im gleichen <code>Docker Stack</code> laufen oder als extra <code>Docker Service</code> installiert sein.</li> <li>For OCS Inventory: Port <code>4443 TCP</code> muss auf dem <code>Docker Host</code> ge\u00f6ffnet werden, damit der OCS Inventory Agent eine Verbindung zum Server aufbauen kann.</li> <li>Einen DNS-Record z.B. <code>glpi.myfirma.de</code> erstellen.</li> </ul>","tags":["Docker","OpenLDAP"]},{"location":"tutorials/docker/openldap/#openldap-installieren","title":"OpenLDAP installieren","text":"OpenLDAP unter <code>Rocky Linux | Oracle</code> einrichten Create foldersDownload config filesSet firewall rulesMariaDB create my.cnf <pre><code>DOCKERDIR=/opt/inventory\ncd ${DOCKERDIR}\ntree -d -L 5 ${DOCKERDIR}\n</code></pre> <pre><code>DOCKERDIR=/opt/inventory\ncd ${DOCKERDIR}\nwget https://raw.githubusercontent.com/johann8/alpine-glpi/master/docker-compose.yml\nwget https://raw.githubusercontent.com/johann8/alpine-glpi/master/docker-compose.override.yml\nwget https://raw.githubusercontent.com/johann8/alpine-glpi/master/.env\n</code></pre> <pre><code># Set firewall rules\nfirewall-cmd --zone=public --add-port=4443/tcp --permanent\nfirewall-cmd --reload\nfirewall-cmd --zone=public --list-all\n</code></pre> <pre><code>EOL\n</code></pre>","tags":["Docker","OpenLDAP"]},{"location":"tutorials/docker/openldap/#openldap-customise-compose-and-config-files","title":"OpenLDAP: Customise compose and config files","text":"OpenLDAP: Customise compose and config files docker-compose.ymldocker-compose.override.yml.env <pre><code>---\nnetworks:\n  ldapNet:\n    driver: bridge\n    driver_opts:\n      com.docker.network.bridge.name: br-ldapnet\n    enable_ipv6: true\n    ipam:\n      driver: default\n      config:\n        - subnet: ${IPV4_NETWORK:-172.22.18}.0/24\n        - subnet: ${IPV6_NETWORK:-fd4d:6169:6c63:6f18::/64}\n\nservices:\n\n  #\n  ### === OpenLDAP COntainer ===\n  #\n\n  openldap:\n    image: johann8/alpine-openldap:${OPENLDAP_VERSION:-latest}\n    container_name: openldap\n    restart: unless-stopped\n    environment:\n      SLAPD_ROOTDN:            ${SLAPD_ROOTDN}\n      SLAPD_ROOTPW:            ${SLAPD_ROOTPW}\n      SLAPD_ROOTPW_HASH:       ${SLAPD_ROOTPW_HASH}\n      SLAPD_ORGANIZATION:      ${SLAPD_ORGANIZATION}\n      SLAPD_FQDN:              ${SLAPD_FQDN}\n      SLAPD_SUFFIX:            ${SLAPD_SUFFIX}\n      SLAPD_PWD_CHECK_QUALITY: ${SLAPD_PWD_CHECK_QUALITY}\n      SLAPD_PWD_MIN_LENGTH:    ${SLAPD_PWD_MIN_LENGTH}\n      SLAPD_PWD_MAX_FAILURE:   ${SLAPD_PWD_MAX_FAILURE}\n      SLAPD_ROOTPW_SECRET:     ${SLAPD_ROOTPW_SECRET}\n      SLAPD_USERPW_SECRET:     ${SLAPD_USERPW_SECRET}\n      SLAPD_PASSWORD_HASH:     ${SLAPD_PASSWORD_HASH}\n      LDAP_BACKUP_TTL:         ${LDAP_BACKUP_TTL}\n      TZ:                      ${TZ}\n    hostname: ${HOSTNAME0}.${DOMAINNAME}\n    volumes:\n      - ${DOCKERDIR}/data/backup:/data/backup\n      - ${DOCKERDIR}/data/prepopulate:/etc/openldap/prepopulate:ro\n      - ${DOCKERDIR}/data/ldapdb:/var/lib/openldap/openldap-data\n      - ${DOCKERDIR}/data/ssl:/etc/ssl/openldap\n      - ${DOCKERDIR}/data/config/ldap/ldif:/etc/openldap/ldif:ro\n      - ${DOCKERDIR}/data/config/ldap/slapd.d:/etc/openldap/slapd.d\n      - ${DOCKERDIR}/data/config/ldap/custom-schema:/etc/openldap/custom-schema\n      - ${DOCKERDIR}/data/config/ldap/secrets:/run/secrets\n    ports:\n      - ${PORT_LDAP:-389}:389\n      - ${PORT_LDAPS:-636}:636\n    #labels:\n      #ofelia.enabled: \"true\"\n      ##ofelia.job-exec.slapd_backup_config.schedule: \"@every 24h\"\n      #ofelia.job-exec.slapd_backup_config.schedule: \"0 0 2 * * *\"\n      #ofelia.job-exec.slapd_backup_config.command: \"/bin/sh -c \\\"/sbin/slapd-backup.sh 0 slapd-config || exit 0\\\"\"\n      #ofelia.job-exec.slapd_backup_data.schedule: \"0 0 2 * * *\"\n      #ofelia.job-exec.slapd_backup_data.command: \"/bin/sh -c \\\"/sbin/slapd-backup.sh 1 slapd-data || exit 0\\\"\"\n    networks:\n      - ldapNet\n    secrets:\n      - ${SLAPD_ROOTPW_SECRET}\n      - ${SLAPD_USERPW_SECRET}\n\n\n  #\n  ### === PhpLdapAdmin Container ===\n  #\n\n  phpldapadmin:\n    image: johann8/phpldapadmin:${PLA_VERSION}\n    container_name: phpldapadmin\n    restart: unless-stopped\n    #volumes:\n      #- ${DOCKERDIR}/data/html:/var/www/html\n    #ports:\n      #- ${PORT_PLA:-8083}:8080\n    environment:\n      - TZ=${TZ}\n      - PHPLDAPADMIN_LANGUAGE=${PHPLDAPADMIN_LANGUAGE}\n      - PHPLDAPADMIN_PASSWORD_HASH=${PHPLDAPADMIN_PASSWORD_HASH}\n      - PHPLDAPADMIN_SERVER_NAME=${PHPLDAPADMIN_SERVER_NAME}\n      - PHPLDAPADMIN_SERVER_HOST=${PHPLDAPADMIN_SERVER_HOST}\n      - PHPLDAPADMIN_BIND_ID=${PHPLDAPADMIN_BIND_ID}\n    depends_on:\n      - openldap\n    networks:\n      - ldapNet\n\nsecrets:\n  openldap-root-password:\n    file: ${DOCKERDIR}/data/config/ldap/secrets/${SLAPD_ROOTPW_SECRET}\n  openldap-user-passwords:\n    file: ${DOCKERDIR}/data/config/ldap/secrets/${SLAPD_USERPW_SECRET}\n</code></pre> <pre><code>---\nservices:\n\n  phpldapadmin:\n    labels:\n      - \"traefik.enable=true\"\n      ### ==== to https ====\n      - \"traefik.http.routers.phpldapadmin-secure.entrypoints=websecure\"\n      - \"traefik.http.routers.phpldapadmin-secure.rule=Host(`${HOSTNAME_PLA}.${DOMAINNAME_PLA}`)\"\n      - \"traefik.http.routers.phpldapadmin-secure.tls=true\"\n      - \"traefik.http.routers.phpldapadmin-secure.tls.certresolver=production\"  # f\u00fcr eigene Zertifikate\n      ### ==== to service ====\n      - \"traefik.http.routers.phpldapadmin-secure.service=phpldapadmin\"\n      - \"traefik.http.services.phpldapadmin.loadbalancer.server.port=${PORT_PLA}\"\n      - \"traefik.docker.network=proxy\"\n      ### ==== redirect to authelia for secure login ====\n      #- \"traefik.http.routers.phpldapadmin-secure.middlewares=rate-limit@file,secHeaders@file\"\n      - \"traefik.http.routers.phpldapadmin-secure.middlewares=authelia@docker,rate-limit@file,secHeaders@file\"\n    networks:\n      - proxy\n\nnetworks:\n  proxy:\n    external: true\n</code></pre> <pre><code>### === SYSTEM ===\nTZ=Europe/Berlin\nDOCKERDIR=/opt/openldap        \n\n### === Network ===\nDOMAINNAME=myfirma.de\nHOSTNAME0=ldap\nPORT_LDAP=389\nPORT_LDAPS=636\n\nDOMAINNAME_PLA=${DOMAINNAME}\nHOSTNAME_PLA=pla\nPORT_PLA=8080\n\nIPV4_NETWORK=172.26.18\nIPV6_NETWORK=fd4d:6169:6c63:6f18::/64\n\n### === APP OpenLDAP ===\nOPENLDAP_VERSION=latest\nSLAPD_ORGANIZATION=\"MyFirma Name\"\nSLAPD_FQDN=${DOMAINNAME}\nSLAPD_SUFFIX=\"dc=myfirma,dc=de\"\nSLAPD_ROOTDN=\"cn=admin,${SLAPD_SUFFIX}\"\nSLAPD_OU=\"ou=Users,\"\n# Plain-text admin password (pwgen -1cnsB 25 3)\nSLAPD_ROOTPW=-ChangeME=PassWord223\nSLAPD_ROOTPW_HASH=\nSLAPD_PASSWORD_HASH=ARGON2\nSLAPD_PWD_CHECK_QUALITY=2\nSLAPD_PWD_MIN_LENGTH=10\nSLAPD_PWD_MAX_FAILURE=5\nSLAPD_ROOTPW_SECRET=openldap-root-password\nSLAPD_USERPW_SECRET=openldap-user-passwords\nLDAP_BACKUP_TTL=5\n\n### === PHPLDAPAdmin Alpine ===\nPLA_VERSION=latest\nPHPLDAPADMIN_LANGUAGE=\"de_DE\"\nPHPLDAPADMIN_PASSWORD_HASH=\"ssha\"\nPHPLDAPADMIN_SERVER_NAME=\"${SLAPD_ORGANIZATION} LDAP Server\"\nPHPLDAPADMIN_SERVER_HOST=\"ldap://${HOSTNAME0}.${DOMAINNAME}\"\nPHPLDAPADMIN_BIND_ID=\"cn=admin,${SLAPD_SUFFIX}\"\n#PHPLDAPADMIN_BIND_ID=\"cn=admin,dc=int,dc=mydomain,dc=de\"\n</code></pre>","tags":["Docker","OpenLDAP"]},{"location":"tutorials/docker/openldap/#der-erste-start-von-openldap-docker-container","title":"Der erste Start von <code>OpenLDAP</code> Docker Container","text":"docker compose (Plugin)docker-compose (Standalone) <pre><code>cd /opt/openldap\ndocker compose up -d\n\n# Zeigt Status an\ndocker compose ps\n\n# Zeigt Logdaten an\ndocker compose logs -f\n</code></pre> <pre><code>cd /opt/openldap\ndocker-compose up -d\n\n# Zeigt Status an\ndocker-compose ps\n\n# Zeigt Logdaten an\ndocker-compose logs -f\n</code></pre>","tags":["Docker","OpenLDAP"]},{"location":"tutorials/docker/openldap/#seite-aufrufen","title":"Seite aufrufen","text":"<p>Wenn keine Fehlermeldungen erschienen sind kann man die Startseite von Traefik aufrufen.</p> <p>Die Anmeldedaten f\u00fcr <code>OpenLDAP Login</code></p> <pre><code>- **URL**: https://glpi.myfirma.de\n- **User**: glpi\n- **Password**: glpi (Bitte das Passwort sofort \u00e4ndern)\n</code></pre> <ol> <li> <p> Wikipedia - OpenLDAP \u21a9</p> </li> <li> <p> Github - OpenLDAP \u21a9</p> </li> <li> <p> Docker Hub \u21a9</p> </li> </ol>","tags":["Docker","OpenLDAP"]},{"location":"tutorials/docker/traefik/","title":"Traefik Reverse Proxy","text":"<p>What Traefik?</p> <p> <code>Traefik</code><sup>1</sup> is a modern HTTP reverse proxy (RP) and load balancer that makes deploying microservices easy.</p>"},{"location":"tutorials/docker/traefik/#install-trafik-as-docker-container","title":"Install Trafik as <code>docker container</code>","text":""},{"location":"tutorials/docker/traefik/#bereiten-sie-ihr-system-vor","title":"Bereiten Sie Ihr System vor","text":"<p>Bevor Sie <code>Traefik</code> installieren, sollten Sie einige Voraussetzungen \u00fcberpr\u00fcfen:</p> <p>Info</p> <ul> <li><code>Docker</code> Dienst muss auf dem Host installiert sein.</li> <li>Traefik ben\u00f6tigt offene Ports <code>80</code> und <code>443</code> f\u00fcr eingehende Verbindungen. Stellen Sie daher sicher, dass Ihre Firewall diese nicht blockiert.</li> <li>Falls ein anderer Dienst auf diesen Ports lauscht, bitte diesen Dienst stoppen und dektivieren.</li> <li>Einen DNS-Record z.B. <code>traefik.myfirma.de</code> erstellen.</li> </ul>"},{"location":"tutorials/docker/traefik/#traefik-installieren","title":"Traefik installieren","text":"Traefik unter <code>Rocky Linux | Oracle</code> einrichten Create docker networkCreate foldersGenerate passwordDownload config filesRotate traefik log file <pre><code>docker network ls\ndocker network create proxy\ndocker network ls\n</code></pre> <pre><code>DOCKERDIR=/opt/traefik\nmkdir -p ${DOCKERDIR}/data/{certs,config,logs}\ntouch ${DOCKERDIR}/data/config/acme.json\nchmod 600 ${DOCKERDIR}/data/config/acme.json\ncd ${DOCKERDIR}\ntree -d -L 3 ${DOCKERDIR}\n</code></pre> <pre><code># htpasswd and pwgen must be installed: `dnf -y httpd-tools pwgen`\nDOCKERDIR=/opt/traefik\nUSER_NAME=user1\nPASSWORD_LENGTH=20\nTRAEFIK_PASSWORD=$(pwgen -1ycnsB --remove-chars=\". ^ $ * ; ~ ' _ ? @ : , &amp; | ! \\\" \\`\" ${PASSWORD_LENGTH} 1)\necho ${TRAEFIK_PASSWORD} &gt; ${DOCKERDIR}/traefik_dashboard_password\necho $(htpasswd -nb ${USER_NAME} ${TRAEFIK_PASSWORD}) | sed -e s/\\\\$/\\\\$\\\\$/g\n\n# Result - Will be in treafik config file inserted (data/conf/dynamic_conf.yml) \nuser1:$$apr1$$ht6O3iSE$$5YxApoPCqeGyMNRsCvXwh/\n</code></pre> <pre><code>DOCKERDIR=/opt/traefik\ncd ${DOCKERDIR}\nwget https://raw.githubusercontent.com/johann8/traefik/master/.env\nwget https://raw.githubusercontent.com/johann8/traefik/master/docker-compose.yml\nwget https://raw.githubusercontent.com/johann8/traefik/master/assets/config/traefik.yml -P data/conf/\nwget https://raw.githubusercontent.com/johann8/traefik/master/assets/config/dynamic_conf.yml -P data/conf/\n</code></pre> <pre><code>cat &gt; /etc/logrotate.d/traefik &lt;&lt; 'EOL'\n/opt/traefik/data/logs/*.log {\n  weekly\n  rotate 5\n  compress\n  #size=1M\n  missingok\n  notifempty  \n  postrotate\n    docker kill --signal=\"USR1\" traefik\n  endscript\n}  \nEOL\nls -la /etc/logrotate.d/\nls -lah /opt/traefik/data/logs/\n\n# Run logrotate manuell\nlogrotate --force /etc/logrotate.d/traefik\nls -lah /opt/traefik/data/logs/\n</code></pre>"},{"location":"tutorials/docker/traefik/#traefik-customise-compose-and-config-files","title":"Traefik: Customise compose and config files","text":"Traefik: Customise compose and config files docker-compose.yml.envdata/conf/traefik.ymldata/conf/dynamic_conf.yml <pre><code>---\nnetworks:\n  proxy:\n    driver: bridge\n    enable_ipv6: true\n    external: true\n\nservices:\n\n#\n### === Traefik Container ===\n#\n\n  traefik:\n    image: traefik:latest\n    container_name: traefik\n    restart: unless-stopped\n    security_opt:\n      - no-new-privileges:true\n    ports:\n      - target: 80\n        published: 80\n        protocol: tcp\n        mode: host\n      - target: 443\n        published: 443\n        protocol: tcp\n        mode: host\n      - target: 443\n        published: 443\n        protocol: udp\n        mode: host\n    environment:\n      - PUID=$PUID\n      - PGID=$PGID\n      - TZ=$TZ\n    healthcheck:\n      test: [\"CMD\", \"traefik\", \"healthcheck\", \"--ping\"]\n      interval: 20s\n      timeout: 1s\n      retries: 3\n      start_period: 10s\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - $DOCKERDIR/data/conf:/etc/traefik\n      - $DOCKERDIR/data/certs:/etc/traefik/certs\n      - $DOCKERDIR/data/logs:/var/log/traefik:rw\n    networks:\n      - proxy\n    labels:\n      - \"traefik.enable=true\"\n      - \"traefik.docker.network=proxy\"\n      - \"traefik.http.routers.traefik-secure.entrypoints=websecure\"\n      - \"traefik.http.routers.traefik-secure.rule=Host(`${HOSTNAME01}.${DOMAINNAME}`) || Host(`storage.${DOMAINNAME}`) || Host(`example.${DOMAINNAME}`)\"\n      - \"traefik.http.routers.traefik-secure.tls=true\"\n      - \"traefik.http.routers.traefik-secure.tls.certresolver=production\"        # f\u00fcr eigene Zertifikate\n      - \"traefik.http.routers.traefik-secure.service=api@internal\"\n      - \"traefik.http.routers.traefik-secure.middlewares=rate-limit@file,secHeaders@file,traefik-auth,autodetectContenttype@file\"\n      #- \"traefik.http.routers.traefik-secure.middlewares=rate-limit@file,secHeaders@file,authelia@docker\"\n      # helthcheck\n      - \"traefik.http.routers.pingweb.rule=PathPrefix(`/ping`)\"\n      - \"traefik.http.routers.pingweb.service=ping@internal\"\n      - \"traefik.http.routers.pingweb.entrypoints=websecure\"\n\n#\n### === Certdumper Container ===\n#\n\n  certdumper:\n    image: humenius/traefik-certs-dumper\n    container_name: certdumper\n    network_mode: none\n    #command: --restart-containers container_name1, container_name2\n    volumes:\n      - \"$DOCKERDIR/data/certs:/traefik:ro\"                             # mounten Sie den Ordner, der Traefiks `acme.json' Datei enth\u00e4lt\n      - \"$DOCKERDIR/data/assets/ssl:/output:rw\"                         # SSL-Ordner von mailcow einh\u00e4ngen\n      #- \"$DOCKERDIR/data/assets/script/hook.sh:/hook/hook.sh:ro\"       # Hook script running after cert dump\n      - \"/var/run/docker.sock:/var/run/docker.sock:ro\"                  # Um Container starten zu k\u00f6nnen\n    restart: always\n</code></pre> <pre><code>### === SYSTEM ===\nTZ=Europe/Berlin\nDOCKERDIR=/opt/traefik\nPUID=1000\nPGID=1000\n\n### === Network ===\nDOMAINNAME=myfirma.de\nHOSTNAME01=traefik\n</code></pre> <pre><code>global:\n  checkNewVersion: true                # Periodically check if a new version has been released\n  sendAnonymousUsage: false            # true by default\n\n# (Optional) Log information\n# ---\nlog:\nlevel: INFO                            # DEBUG, INFO, WARNING, ERROR, CRITICAL\nformat: common                         # common, json, logfmt\nfilePath: /var/log/traefik/traefik.log\n\n# (Optional) Accesslog\n# ---\naccesslog:\n  format: common                       # common, json, logfmt\n  filePath: /var/log/traefik/access.log\n  filters:\n    statusCodes:\n      - \"400-600\"\n\n# (Optional) Enable API and Dashboard\n# ---\napi:\n  dashboard: true                      # true by default\n  insecure: false                      # true - Don't do this in production!\n\n# Entry Points configuration\n# ---\nentryPoints:\n  ping:\n    address: :88\n\n  web:\n    address: :80\n    http:\n      #middlewares:                    # For crowdsec\n        #- crowdsec-bouncer@file\n      redirections:\n        entryPoint:\n          to: websecure\n          scheme: https\n\n  websecure:\n    address: :443\n    http:\n      #middlewares:                     # For crowdsec\n        #- crowdsec-bouncer@file\n    http3:\n      advertisedPort: 443\n\n# Ping\n# ---\nping:\n  entryPoint: ping\n\n# Configure your CertificateResolver here...\n# ---\ncertificatesResolvers:\n  #staging:\n  #  acme:\n  #    email: le@myfirma.de\n  #    storage: /etc/traefik/certs/acme.json\n  #    caServer: \"https://acme-staging-v02.api.letsencrypt.org/directory\"\n  #    httpChallenge:\n  #      entryPoint: web\n\n  production:\n    acme:\n      email: le@myfirma.de\n      storage: /etc/traefik/certs/acme.json\n      tlsChallenge: {}\n      httpChallenge:\n        entryPoint: web\n      #dnsChallenge:\n        #provider: digitalocean\n        #delayBeforeCheck:\n\nproviders:\n  docker:\n    exposedByDefault: false                          # Default is true\n    endpoint: \"unix:///var/run/docker.sock\"\n    network: \"proxy\n  file:\n    # watch for dynamic configuration changes\n    directory: /etc/traefik\n    watch: true\n    filename: \"/etc/traefik/dynamic_conf.yml\"\n  providersThrottleDuration: 10                        # Configuration reload frequency\n\n## For ProxMox VE\n#serversTransport:\n  #insecureSkipVerify: true\n\npilot:\n  dashboard: false \n</code></pre> <pre><code>tls:\n  options:\n    default:\n      minVersion: VersionTLS12\n      cipherSuites:\n        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305\n        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305\n      curvePreferences:\n        - CurveP521\n        - CurveP384\n      sniStrict: false                          # true, wenn Zert. auf die FQDN ausgestellt ist\n\n# http routing section\n# ---\nhttp:\n  middlewares:\n\n    # A basic authentification middleware, to protect the Traefik dashboard to anyone except myself\n    # Use with traefik.http.routers.myRouter.middlewares: \"traefik-auth@file\"\n    traefik-auth:\n      basicAuth:\n        users:\n          - \"user1:$$apr1$$ht6O3iSE$$5YxApoPCqeGyMNRsCvXwh/\"   # htpasswd -nB user1; PW: MySuperPW\n        realm: \"Traefik dashboard on OracleL8\"\n\n    https-redirect:\n      redirectScheme:\n        scheme: https\n        permanent: true\n\n    # Use with traefik.http.routers.myRouter.middlewares: \"ipallowlist@file\"\n    ipallowlist:\n      IPAllowList:\n        sourceRange:\n          - \"10.0.0.0/8\"\n          - \"192.168.0.0/16\"\n          - \"172.0.0.0/12\"\n\n    # # Use with traefik.http.routers.myRouter.middlewares: \"rate-limit@file\"\n    rate-limit:\n      rateLimit:\n        average: 100            # an average of 100 requests per second is allowed\n        period: 10s             # Period is in s oder m: 100 requests per 10 second is allowed\n        burst: 100              # a burst (max) of 50 requests is allowed\n\n    # Use with traefik.http.routers.myRouter.middlewares: \"traefik-compress@file\"\n    traefik-compress:\n      compress: {}\n\n    # # Use with traefik.http.routers.myRouter.middlewares: \"secured@file\"\n    secured:\n      chain:\n        middlewares:\n          - ipallowlist\n          - secHeaders\n          - traefik-compress\n\n    # Middleware for Authelia\n    authelia:\n      forwardAuth:\n        #address: \"http://authelia:9091/api/authz/forward-auth\"                   # Since Authelia version 4.38\n        address: \"http://authelia:9091/api/verify?rd=https://auth.myfirma.de\"     # Since Authelia version 4.38\n      trustForwardHeader: true\n        #authResponseHeaders:\n          #- \"Remote-User\"\n          #- \"Remote-Groups\"\n          #- \"Remote-Name\"\n          #- \"Remote-Email\"\n\n    # Middleware for crowdsec\n    crowdsec-bouncer:\n      forwardauth:\n        address: http://bouncer-traefik:8080/api/v1/forwardAuth                  # Since Authelia version 4.38\n        trustForwardHeader: true\n\n    # needed for traefik v3 - see https://doc.traefik.io/traefik/v3.0/migration/v2-to-v3/\n    autodetectContenttype:\n      contentType: {}\n\n    secHeaders:\n      headers:\n        BrowserXssFilter: true\n        ContentTypeNosniff: true\n        ForceSTSHeader: true\n        frameDeny: true\n\n        #HSTS Configuration\n        STSIncludeSubdomains: true\n        STSPreload: true\n        stsSeconds: 31536000\n        customFrameOptionsValue: \"SAMEORIGIN\"\n        customRequestHeaders:\n          X-Forwarded-Proto: https\n          X-Frame-Options: \"SAMEORIGIN\"\n</code></pre>"},{"location":"tutorials/docker/traefik/#der-erste-start-von-traefik-docker-container","title":"Der erste Start von <code>Traefik</code> Docker Container","text":"docker compose (Plugin)docker-compose (Standalone) <pre><code>cd /opt/traefik\ndocker compose up -d\n\n# Zeigt Status an\ndocker compose ps\n\n# Zeigt Logdaten an\ndocker compose logs -f\n</code></pre> <pre><code>cd /opt/traefik\ndocker-compose up -d\n\n# Zeigt Status an\ndocker-compose ps\n\n# Zeigt Logdaten an\ndocker-compose logs -f\n</code></pre>"},{"location":"tutorials/docker/traefik/#seite-aufrufen","title":"Seite aufrufen","text":"<p>Wenn keine Fehlermeldungen erschienen sind kann man die Startseite von Traefik aufrufen.</p> <p>Die Anmeldedaten f\u00fcr <code>Traefik Dashboard</code></p> <ul> <li>URL: https://traefik.myfirma.de</li> <li>User: user1</li> <li>Password: (cat /opt/traefik/traefik_dashboard_password)</li> </ul> <p>Benutzen Sie die Anmeldedaten, die Sie generiert haben.</p> <ol> <li> <p>Wikipedia - Traefik \u21a9</p> </li> </ol>"},{"location":"windows/tipps-und-tricks/","title":"Windows Tipps und Tricks","text":"","tags":["windows","tipps","tricks"]},{"location":"windows/tipps-und-tricks/#chocolatey-repository-installieren","title":"<code>Chocolatey</code> Repository installieren","text":"<p>Chocolatey<sup>1</sup> is a machine-level, command-line package manager and installer for software on Microsoft Windows. It uses the NuGet packaging infrastructure and Windows PowerShell to simplify the process of downloading and installing software.</p> <code>Chocolatey</code> Repository installieren Den Fehler <code>Windows-RE-Image wurde nicht gefunden</code> beheben <ol> <li> <p>Wikipedia - Chocolatey \u21a9</p> </li> </ol>","tags":["windows","tipps","tricks"]},{"location":"windows/tipps-und-tricks/#chocolatey-repo-installieren","title":"Chocolatey Repo installieren","text":"<pre><code># CMD als Administrator starten und eingeben:\n@\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \"iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" &amp;&amp; SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"\n</code></pre> <p>Terminal Programm <code>cmder</code> zu Indexierung einf\u00fcgen.</p> <p>Starten Sie die Systemsteuerung und suchen Sie nach <code>Indizierungsoptionen</code>. Klicken Sie darauf und danach auf die Schaltfl\u00e4che <code>\u00c4ndern</code>. Im Fenster navigieren Sie zum <code>C:\\tools</code> und setzen Sie den Hacken ein. Danach klicken Sie auf <code>Schlie\u00dfen</code>. Nach etwas Zeit findet man <code>cmder</code> \u00fcber Windows-Suche.    </p>","tags":["windows","tipps","tricks"]},{"location":"windows/tipps-und-tricks/#windows-terminal-cmder-aus-der-repository-installieren","title":"Windows Terminal <code>cmder</code> aus der Repository installieren","text":"<pre><code># CMD als Administrator starten und eingeben:\nchoco install cmder -y\n</code></pre>","tags":["windows","tipps","tricks"]},{"location":"windows/tipps-und-tricks/#softaware-aus-der-repository-installieren","title":"Softaware aus der Repository installieren","text":"<pre><code># cmder als Administrator starten und eingeben:\nchoco install 7zip cmder notepadplusplus firefox pdf24 googlechrome sudo adobereader -y\n</code></pre>","tags":["windows","tipps","tricks"]},{"location":"windows/tipps-und-tricks/#einige-beispiele","title":"Einige Beispiele","text":"<pre><code># Alle installierte Software anzeigen lassen\nchoco list\n\n# Software deinstallieren\nchoco uninstall anydesk anydesk.portable -y\n\n# Software nur aus lokaler Repo entfernen, nicht deinstallieren \nchoco uninstall anydesk -n --skipautouninstaller -y\n\n# Suchen nach Software in der Repo\nchoco search totalcomm\n\n# Update alle installierten Software\nchoco upgrade all -y\n</code></pre>","tags":["windows","tipps","tricks"]},{"location":"windows/tipps-und-tricks/#fehler-windows-re-image-wurde-nicht-gefunden-beheben","title":"Fehler <code>Windows-RE-Image wurde nicht gefunden</code> beheben","text":"<pre><code># CMD | cmder als Administrator starten und f\u00fchren Sie aus:\n\n# Suchen Sie die Datei wine.wim auf Ihrem Computer\ndir /a /s c:\\winre.wim\n\n# \u00c4ndern Sie die Atrubute der Datei winre.wim\nattrib -h -s c:\\$WinREAgent\\Backup\\winre.wim\n\n# Kopieren Sie die Datei winre.wim\nxcopy /h c:\\$WinREAgent\\Backup\\winre.wim c:\\Windows\\System32\\Recovery\n\n# Setzen Sie den neuen Pfad\nreagentc /setreimage /path C:\\windows\\system32\\recovery\n\n# Aktivieren Sie die Wiederherstellungsumgebung\nreagentc /enable\n\n# \u00fcberpr\u00fcfen Sie den Status\nreagentc /info\n</code></pre>","tags":["windows","tipps","tricks"]},{"location":"tags/","title":"Tags and Categories","text":""},{"location":"tags/#docker","title":"Docker","text":"<ul> <li>GLPI</li> <li>MeshCentral</li> <li>OCS Inventory</li> <li>OpenLDAP</li> </ul>"},{"location":"tags/#glpi","title":"GLPI","text":"<ul> <li>GLPI</li> </ul>"},{"location":"tags/#inventory","title":"Inventory","text":"<ul> <li>GLPI</li> <li>OCS Inventory</li> </ul>"},{"location":"tags/#meschcentral","title":"Meschcentral","text":"<ul> <li>MeshCentral</li> </ul>"},{"location":"tags/#ocs","title":"OCS","text":"<ul> <li>OCS Inventory</li> </ul>"},{"location":"tags/#openldap","title":"OpenLDAP","text":"<ul> <li>OpenLDAP</li> </ul>"},{"location":"tags/#remote","title":"Remote","text":"<ul> <li>MeshCentral</li> </ul>"},{"location":"tags/#support","title":"Support","text":"<ul> <li>MeshCentral</li> </ul>"},{"location":"tags/#layout","title":"layout","text":"<ul> <li>\u00c4nderung des Partitionslayouts</li> </ul>"},{"location":"tags/#linux","title":"linux","text":"<ul> <li>Tipps und Tricks</li> </ul>"},{"location":"tags/#lvm","title":"lvm","text":"<ul> <li>\u00c4nderung des Partitionslayouts</li> </ul>"},{"location":"tags/#parted","title":"parted","text":"<ul> <li>\u00c4nderung des Partitionslayouts</li> </ul>"},{"location":"tags/#partition","title":"partition","text":"<ul> <li>\u00c4nderung des Partitionslayouts</li> </ul>"},{"location":"tags/#tipps","title":"tipps","text":"<ul> <li>Tipps und Tricks</li> <li>Tipps und Tricks</li> </ul>"},{"location":"tags/#tricks","title":"tricks","text":"<ul> <li>Tipps und Tricks</li> <li>Tipps und Tricks</li> </ul>"},{"location":"tags/#windows","title":"windows","text":"<ul> <li>Tipps und Tricks</li> </ul>"}]}